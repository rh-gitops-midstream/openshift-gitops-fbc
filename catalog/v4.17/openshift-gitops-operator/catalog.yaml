---
defaultChannel: stable-v1.16
name: openshift-gitops-operator
schema: olm.package
---
entries:
- name: openshift-gitops-operator.v1.1.0
- name: openshift-gitops-operator.v1.1.1
- name: openshift-gitops-operator.v1.1.2
  skips:
  - openshift-gitops-operator.v1.1.0
  - openshift-gitops-operator.v1.1.1
- name: openshift-gitops-operator.v1.2.0
- name: openshift-gitops-operator.v1.2.1
- name: openshift-gitops-operator.v1.2.2
- name: openshift-gitops-operator.v1.2.3
- name: openshift-gitops-operator.v1.2.4
  replaces: openshift-gitops-operator.v1.1.2
  skips:
  - openshift-gitops-operator.v1.1.2
  - openshift-gitops-operator.v1.2.0
  - openshift-gitops-operator.v1.2.1
  - openshift-gitops-operator.v1.2.2
  - openshift-gitops-operator.v1.2.3
- name: openshift-gitops-operator.v1.3.0
- name: openshift-gitops-operator.v1.3.1
- name: openshift-gitops-operator.v1.3.2
- name: openshift-gitops-operator.v1.3.3
- name: openshift-gitops-operator.v1.3.4
- name: openshift-gitops-operator.v1.3.5
- name: openshift-gitops-operator.v1.3.6
- name: openshift-gitops-operator.v1.3.7
- name: openshift-gitops-operator.v1.3.8
- name: openshift-gitops-operator.v1.3.9
- name: openshift-gitops-operator.v1.3.10
- name: openshift-gitops-operator.v1.3.11
- name: openshift-gitops-operator.v1.3.12
- name: openshift-gitops-operator.v1.3.13
- name: openshift-gitops-operator.v1.3.14
  replaces: openshift-gitops-operator.v1.2.4
  skips:
  - openshift-gitops-operator.v1.2.4
  - openshift-gitops-operator.v1.3.0
  - openshift-gitops-operator.v1.3.1
  - openshift-gitops-operator.v1.3.2
  - openshift-gitops-operator.v1.3.3
  - openshift-gitops-operator.v1.3.4
  - openshift-gitops-operator.v1.3.5
  - openshift-gitops-operator.v1.3.6
  - openshift-gitops-operator.v1.3.7
  - openshift-gitops-operator.v1.3.8
  - openshift-gitops-operator.v1.3.9
  - openshift-gitops-operator.v1.3.10
  - openshift-gitops-operator.v1.3.11
  - openshift-gitops-operator.v1.3.12
  - openshift-gitops-operator.v1.3.13
- name: openshift-gitops-operator.v1.4.0
- name: openshift-gitops-operator.v1.4.1
- name: openshift-gitops-operator.v1.4.2
- name: openshift-gitops-operator.v1.4.3
- name: openshift-gitops-operator.v1.4.4
- name: openshift-gitops-operator.v1.4.5
- name: openshift-gitops-operator.v1.4.6
- name: openshift-gitops-operator.v1.4.7
- name: openshift-gitops-operator.v1.4.8
- name: openshift-gitops-operator.v1.4.9
- name: openshift-gitops-operator.v1.4.10
- name: openshift-gitops-operator.v1.4.11
- name: openshift-gitops-operator.v1.4.12-0.1664821688.p
- name: openshift-gitops-operator.v1.4.13
  replaces: openshift-gitops-operator.v1.3.14
  skips:
  - openshift-gitops-operator.v1.3.14
  - openshift-gitops-operator.v1.4.0
  - openshift-gitops-operator.v1.4.1
  - openshift-gitops-operator.v1.4.2
  - openshift-gitops-operator.v1.4.3
  - openshift-gitops-operator.v1.4.4
  - openshift-gitops-operator.v1.4.5
  - openshift-gitops-operator.v1.4.6
  - openshift-gitops-operator.v1.4.7
  - openshift-gitops-operator.v1.4.8
  - openshift-gitops-operator.v1.4.9
  - openshift-gitops-operator.v1.4.10
  - openshift-gitops-operator.v1.4.11
  - openshift-gitops-operator.v1.4.12-0.1664821688.p
- name: openshift-gitops-operator.v1.5.0
- name: openshift-gitops-operator.v1.5.1
- name: openshift-gitops-operator.v1.5.2
- name: openshift-gitops-operator.v1.5.3
- name: openshift-gitops-operator.v1.5.4
- name: openshift-gitops-operator.v1.5.5
- name: openshift-gitops-operator.v1.5.6-0.1664915551.p
- name: openshift-gitops-operator.v1.5.7
- name: openshift-gitops-operator.v1.5.8
- name: openshift-gitops-operator.v1.5.9
- name: openshift-gitops-operator.v1.5.10
  replaces: openshift-gitops-operator.v1.4.13
  skips:
  - openshift-gitops-operator.v1.4.13
  - openshift-gitops-operator.v1.5.0
  - openshift-gitops-operator.v1.5.1
  - openshift-gitops-operator.v1.5.2
  - openshift-gitops-operator.v1.5.3
  - openshift-gitops-operator.v1.5.4
  - openshift-gitops-operator.v1.5.5
  - openshift-gitops-operator.v1.5.6-0.1664915551.p
  - openshift-gitops-operator.v1.5.7
  - openshift-gitops-operator.v1.5.8
  - openshift-gitops-operator.v1.5.9
- name: openshift-gitops-operator.v1.6.0
- name: openshift-gitops-operator.v1.6.1-0.1666124167.p
- name: openshift-gitops-operator.v1.6.7
  replaces: openshift-gitops-operator.v1.5.10
  skips:
  - openshift-gitops-operator.v1.5.10
  - openshift-gitops-operator.v1.6.0
  - openshift-gitops-operator.v1.6.1-0.1666124167.p
- name: openshift-gitops-operator.v1.7.4-0.1690486082.p
  replaces: openshift-gitops-operator.v1.6.7
  skips:
  - openshift-gitops-operator.v1.6.7
- name: openshift-gitops-operator.v1.8.6
  replaces: openshift-gitops-operator.v1.7.4-0.1690486082.p
  skips:
  - openshift-gitops-operator.v1.7.4-0.1690486082.p
- name: openshift-gitops-operator.v1.9.4
  replaces: openshift-gitops-operator.v1.8.6
  skips:
  - openshift-gitops-operator.v1.8.6
- name: openshift-gitops-operator.v1.10.0
- name: openshift-gitops-operator.v1.10.1
- name: openshift-gitops-operator.v1.10.2
- name: openshift-gitops-operator.v1.10.3
- name: openshift-gitops-operator.v1.10.4
- name: openshift-gitops-operator.v1.10.5
- name: openshift-gitops-operator.v1.10.6
  replaces: openshift-gitops-operator.v1.9.4
  skips:
  - openshift-gitops-operator.v1.9.4
  - openshift-gitops-operator.v1.10.0
  - openshift-gitops-operator.v1.10.1
  - openshift-gitops-operator.v1.10.2
  - openshift-gitops-operator.v1.10.3
  - openshift-gitops-operator.v1.10.4
  - openshift-gitops-operator.v1.10.5
- name: openshift-gitops-operator.v1.11.0
- name: openshift-gitops-operator.v1.11.1
- name: openshift-gitops-operator.v1.11.2
- name: openshift-gitops-operator.v1.11.3
- name: openshift-gitops-operator.v1.11.4
- name: openshift-gitops-operator.v1.11.5
- name: openshift-gitops-operator.v1.11.6
- name: openshift-gitops-operator.v1.11.7-0.1724840231.p
  replaces: openshift-gitops-operator.v1.10.6
  skips:
  - openshift-gitops-operator.v1.10.6
  - openshift-gitops-operator.v1.11.0
  - openshift-gitops-operator.v1.11.1
  - openshift-gitops-operator.v1.11.2
  - openshift-gitops-operator.v1.11.3
  - openshift-gitops-operator.v1.11.4
  - openshift-gitops-operator.v1.11.5
  - openshift-gitops-operator.v1.11.6
- name: openshift-gitops-operator.v1.12.0
- name: openshift-gitops-operator.v1.12.1
- name: openshift-gitops-operator.v1.12.2
- name: openshift-gitops-operator.v1.12.3
- name: openshift-gitops-operator.v1.12.4
- name: openshift-gitops-operator.v1.12.5-0.1727371523.p
- name: openshift-gitops-operator.v1.12.6
  replaces: openshift-gitops-operator.v1.11.7-0.1724840231.p
  skips:
  - openshift-gitops-operator.v1.11.7-0.1724840231.p
  - openshift-gitops-operator.v1.12.0
  - openshift-gitops-operator.v1.12.1
  - openshift-gitops-operator.v1.12.2
  - openshift-gitops-operator.v1.12.3
  - openshift-gitops-operator.v1.12.4
  - openshift-gitops-operator.v1.12.5-0.1727371523.p
- name: openshift-gitops-operator.v1.13.0
- name: openshift-gitops-operator.v1.13.1
- name: openshift-gitops-operator.v1.13.2
- name: openshift-gitops-operator.v1.13.3-0.1741683398.p
  replaces: openshift-gitops-operator.v1.12.6
  skips:
  - openshift-gitops-operator.v1.12.6
  - openshift-gitops-operator.v1.13.0
  - openshift-gitops-operator.v1.13.1
  - openshift-gitops-operator.v1.13.2
- name: openshift-gitops-operator.v1.14.0
- name: openshift-gitops-operator.v1.14.1
- name: openshift-gitops-operator.v1.14.2-0.1738140086.p
- name: openshift-gitops-operator.v1.14.3-0.1746016855.p
  replaces: openshift-gitops-operator.v1.13.3-0.1741683398.p
  skips:
  - openshift-gitops-operator.v1.13.3-0.1741683398.p
  - openshift-gitops-operator.v1.14.0
  - openshift-gitops-operator.v1.14.1
  - openshift-gitops-operator.v1.14.2-0.1738140086.p
- name: openshift-gitops-operator.v1.15.0-0.1738074324.p
- name: openshift-gitops-operator.v1.15.1
  replaces: openshift-gitops-operator.v1.14.3-0.1746016855.p
  skips:
  - openshift-gitops-operator.v1.14.3-0.1746016855.p
  - openshift-gitops-operator.v1.15.0-0.1738074324.p
- name: openshift-gitops-operator.v1.16.0-0.1746014725.p
- name: openshift-gitops-operator.v1.16.1
  replaces: openshift-gitops-operator.v1.15.1
  skips:
  - openshift-gitops-operator.v1.15.1
  - openshift-gitops-operator.v1.16.0-0.1746014725.p
name: stable-v1
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.1.0
- name: openshift-gitops-operator.v1.1.1
- name: openshift-gitops-operator.v1.1.2
  skips:
  - openshift-gitops-operator.v1.1.0
  - openshift-gitops-operator.v1.1.1
name: stable-v1.1
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.10.0
- name: openshift-gitops-operator.v1.10.1
- name: openshift-gitops-operator.v1.10.2
- name: openshift-gitops-operator.v1.10.3
- name: openshift-gitops-operator.v1.10.4
- name: openshift-gitops-operator.v1.10.5
- name: openshift-gitops-operator.v1.10.6
  skips:
  - openshift-gitops-operator.v1.10.0
  - openshift-gitops-operator.v1.10.1
  - openshift-gitops-operator.v1.10.2
  - openshift-gitops-operator.v1.10.3
  - openshift-gitops-operator.v1.10.4
  - openshift-gitops-operator.v1.10.5
name: stable-v1.10
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.11.0
- name: openshift-gitops-operator.v1.11.1
- name: openshift-gitops-operator.v1.11.2
- name: openshift-gitops-operator.v1.11.3
- name: openshift-gitops-operator.v1.11.4
- name: openshift-gitops-operator.v1.11.5
- name: openshift-gitops-operator.v1.11.6
- name: openshift-gitops-operator.v1.11.7-0.1724840231.p
  skips:
  - openshift-gitops-operator.v1.11.0
  - openshift-gitops-operator.v1.11.1
  - openshift-gitops-operator.v1.11.2
  - openshift-gitops-operator.v1.11.3
  - openshift-gitops-operator.v1.11.4
  - openshift-gitops-operator.v1.11.5
  - openshift-gitops-operator.v1.11.6
name: stable-v1.11
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.12.0
- name: openshift-gitops-operator.v1.12.1
- name: openshift-gitops-operator.v1.12.2
- name: openshift-gitops-operator.v1.12.3
- name: openshift-gitops-operator.v1.12.4
- name: openshift-gitops-operator.v1.12.5-0.1727371523.p
- name: openshift-gitops-operator.v1.12.6
  skips:
  - openshift-gitops-operator.v1.12.0
  - openshift-gitops-operator.v1.12.1
  - openshift-gitops-operator.v1.12.2
  - openshift-gitops-operator.v1.12.3
  - openshift-gitops-operator.v1.12.4
  - openshift-gitops-operator.v1.12.5-0.1727371523.p
name: stable-v1.12
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.13.0
- name: openshift-gitops-operator.v1.13.1
- name: openshift-gitops-operator.v1.13.2
- name: openshift-gitops-operator.v1.13.3-0.1741683398.p
  skips:
  - openshift-gitops-operator.v1.13.0
  - openshift-gitops-operator.v1.13.1
  - openshift-gitops-operator.v1.13.2
name: stable-v1.13
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.14.0
- name: openshift-gitops-operator.v1.14.1
- name: openshift-gitops-operator.v1.14.2-0.1738140086.p
- name: openshift-gitops-operator.v1.14.3-0.1746016855.p
  skips:
  - openshift-gitops-operator.v1.14.0
  - openshift-gitops-operator.v1.14.1
  - openshift-gitops-operator.v1.14.2-0.1738140086.p
name: stable-v1.14
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.15.0-0.1738074324.p
- name: openshift-gitops-operator.v1.15.1
  skips:
  - openshift-gitops-operator.v1.15.0-0.1738074324.p
name: stable-v1.15
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.16.0-0.1746014725.p
- name: openshift-gitops-operator.v1.16.1
  skips:
  - openshift-gitops-operator.v1.16.0-0.1746014725.p
name: stable-v1.16
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.2.0
- name: openshift-gitops-operator.v1.2.1
- name: openshift-gitops-operator.v1.2.2
- name: openshift-gitops-operator.v1.2.3
- name: openshift-gitops-operator.v1.2.4
  skips:
  - openshift-gitops-operator.v1.2.0
  - openshift-gitops-operator.v1.2.1
  - openshift-gitops-operator.v1.2.2
  - openshift-gitops-operator.v1.2.3
name: stable-v1.2
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.3.0
- name: openshift-gitops-operator.v1.3.1
- name: openshift-gitops-operator.v1.3.2
- name: openshift-gitops-operator.v1.3.3
- name: openshift-gitops-operator.v1.3.4
- name: openshift-gitops-operator.v1.3.5
- name: openshift-gitops-operator.v1.3.6
- name: openshift-gitops-operator.v1.3.7
- name: openshift-gitops-operator.v1.3.8
- name: openshift-gitops-operator.v1.3.9
- name: openshift-gitops-operator.v1.3.10
- name: openshift-gitops-operator.v1.3.11
- name: openshift-gitops-operator.v1.3.12
- name: openshift-gitops-operator.v1.3.13
- name: openshift-gitops-operator.v1.3.14
  skips:
  - openshift-gitops-operator.v1.3.0
  - openshift-gitops-operator.v1.3.1
  - openshift-gitops-operator.v1.3.2
  - openshift-gitops-operator.v1.3.3
  - openshift-gitops-operator.v1.3.4
  - openshift-gitops-operator.v1.3.5
  - openshift-gitops-operator.v1.3.6
  - openshift-gitops-operator.v1.3.7
  - openshift-gitops-operator.v1.3.8
  - openshift-gitops-operator.v1.3.9
  - openshift-gitops-operator.v1.3.10
  - openshift-gitops-operator.v1.3.11
  - openshift-gitops-operator.v1.3.12
  - openshift-gitops-operator.v1.3.13
name: stable-v1.3
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.4.0
- name: openshift-gitops-operator.v1.4.1
- name: openshift-gitops-operator.v1.4.2
- name: openshift-gitops-operator.v1.4.3
- name: openshift-gitops-operator.v1.4.4
- name: openshift-gitops-operator.v1.4.5
- name: openshift-gitops-operator.v1.4.6
- name: openshift-gitops-operator.v1.4.7
- name: openshift-gitops-operator.v1.4.8
- name: openshift-gitops-operator.v1.4.9
- name: openshift-gitops-operator.v1.4.10
- name: openshift-gitops-operator.v1.4.11
- name: openshift-gitops-operator.v1.4.12-0.1664821688.p
- name: openshift-gitops-operator.v1.4.13
  skips:
  - openshift-gitops-operator.v1.4.0
  - openshift-gitops-operator.v1.4.1
  - openshift-gitops-operator.v1.4.2
  - openshift-gitops-operator.v1.4.3
  - openshift-gitops-operator.v1.4.4
  - openshift-gitops-operator.v1.4.5
  - openshift-gitops-operator.v1.4.6
  - openshift-gitops-operator.v1.4.7
  - openshift-gitops-operator.v1.4.8
  - openshift-gitops-operator.v1.4.9
  - openshift-gitops-operator.v1.4.10
  - openshift-gitops-operator.v1.4.11
  - openshift-gitops-operator.v1.4.12-0.1664821688.p
name: stable-v1.4
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.5.0
- name: openshift-gitops-operator.v1.5.1
- name: openshift-gitops-operator.v1.5.2
- name: openshift-gitops-operator.v1.5.3
- name: openshift-gitops-operator.v1.5.4
- name: openshift-gitops-operator.v1.5.5
- name: openshift-gitops-operator.v1.5.6-0.1664915551.p
- name: openshift-gitops-operator.v1.5.7
- name: openshift-gitops-operator.v1.5.8
- name: openshift-gitops-operator.v1.5.9
- name: openshift-gitops-operator.v1.5.10
  skips:
  - openshift-gitops-operator.v1.5.0
  - openshift-gitops-operator.v1.5.1
  - openshift-gitops-operator.v1.5.2
  - openshift-gitops-operator.v1.5.3
  - openshift-gitops-operator.v1.5.4
  - openshift-gitops-operator.v1.5.5
  - openshift-gitops-operator.v1.5.6-0.1664915551.p
  - openshift-gitops-operator.v1.5.7
  - openshift-gitops-operator.v1.5.8
  - openshift-gitops-operator.v1.5.9
name: stable-v1.5
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.6.0
- name: openshift-gitops-operator.v1.6.1-0.1666124167.p
- name: openshift-gitops-operator.v1.6.7
  skips:
  - openshift-gitops-operator.v1.6.0
  - openshift-gitops-operator.v1.6.1-0.1666124167.p
name: stable-v1.6
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.7.4-0.1690486082.p
name: stable-v1.7
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.8.6
name: stable-v1.8
package: openshift-gitops-operator
schema: olm.channel
---
entries:
- name: openshift-gitops-operator.v1.9.4
name: stable-v1.9
package: openshift-gitops-operator
schema: olm.channel
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:849a346bb1faac6a76595a21ebbc424134f21fbaed693b8bde6490df6a46c6c0
name: openshift-gitops-operator.v1.1.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.gvk.required
  value:
    group: operator.tekton.dev
    kind: TektonConfig
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.1.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "server": {
                "route": {
                  "enabled": true
                }
              }
            }
          }
        ]
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:77284eb3de15b9655224c5c1374b9d402e98944ac1e29a36b03f1533ec082d1e
      createdAt: "2020-06-25T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      required:
      - description: Represents Installation of Tekton.
        displayName: OpenShift Pipelines Config
        kind: TektonConfig
        name: tektonconfigs.operator.tekton.dev
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/ redhat-developer/kam)
      \n\n## Components\n* Argo CD 2.0.0\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: shbose@redhat.com
      name: shoubhik
    maturity: alpha
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:3fc27ddc20fa844627af4c93031954fce91ea7f3b4eb1d97adf5959742f4aeaa
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:42c13ca0466138f032dca8e515706f5c80b87573d70d296e5d4488eae4e21609
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:849a346bb1faac6a76595a21ebbc424134f21fbaed693b8bde6490df6a46c6c0
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:77284eb3de15b9655224c5c1374b9d402e98944ac1e29a36b03f1533ec082d1e
  name: gitops-rhel8-operator-77284eb3de15b9655224c5c1374b9d402e98944ac1e29a36b03f1533ec082d1e-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:77284eb3de15b9655224c5c1374b9d402e98944ac1e29a36b03f1533ec082d1e
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:e390efe04d9f6836f79ff25351f7da53c81dca35764ade6fa5bf627878017da8
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e47dbbe01bdc2845e7c22acc7963b79ad9abd6528539e60d3e21ecb699923ca0
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:ac3a6ea1a849a5e0d57db551d56ce5c0177066d12984df9e5841bafc884a6970
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rhel8/redis-5@sha256:47357edb43cffa705c40b88cacc53e21ee2b2e1e53e75e85b7c75c58d5045c45
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:47357edb43cffa705c40b88cacc53e21ee2b2e1e53e75e85b7c75c58d5045c45
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1170e203046b1a08f851038c02e1175f93abe9ff57a1e5669b35ccfb87dc8644
name: openshift-gitops-operator.v1.1.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.1.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "server": {
                "route": {
                  "enabled": true
                }
              }
            }
          }
        ]
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:20e14dd94f9519e83341ba52704c5843969a8244956898552a9557192626080a
      createdAt: "2020-06-25T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/ redhat-developer/kam)
      \n\n## Components\n* Argo CD 2.0.0\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: shbose@redhat.com
      name: shoubhik
    maturity: alpha
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:cdfb1bc63f2c8bce0b2e188998a5dbe291ff853d071812f800a8b34a7cb8fd6c
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1da88dd045197f3a64c9508e290fd64f23dc0648bc304f6416e952d9404bee57
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1170e203046b1a08f851038c02e1175f93abe9ff57a1e5669b35ccfb87dc8644
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:20e14dd94f9519e83341ba52704c5843969a8244956898552a9557192626080a
  name: gitops-rhel8-operator-20e14dd94f9519e83341ba52704c5843969a8244956898552a9557192626080a-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:20e14dd94f9519e83341ba52704c5843969a8244956898552a9557192626080a
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:03fe207bcaf39ff1b5c8b01463b3d01368003a259933fd235be10ffddb5f347c
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:2fdc5068ef23185ae1bd920918ca6fb4ae01e85362b118c9adda43f63c4c9580
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:9a0d0671fee424130907d25634d1562b131d772a5fac5859588af597396f14f0
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rhel8/redis-5@sha256:4afc0b5b02fd88d52fe08506eb32e60b192aba1d7a31508ad9e207e9de026e39
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:4afc0b5b02fd88d52fe08506eb32e60b192aba1d7a31508ad9e207e9de026e39
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:433f19e7247d000b0001970b4584eff2933ef15d29f1f4e898592a6da72aec05
name: openshift-gitops-operator.v1.1.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.1.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "server": {
                "route": {
                  "enabled": true
                }
              }
            }
          }
        ]
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:db6474d73c5c6591a3474bdb1103c27afdd8240b7ba40dd959418889df7a0d90
      createdAt: "2020-06-25T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/ redhat-developer/kam)
      \n\n## Components\n* Argo CD 2.0.0\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: shbose@redhat.com
      name: shoubhik
    maturity: alpha
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:3a58ee87ebb121fc9b97cfc9d7b5bfe7198d95d5dcc1bbfccc8832b008f63039
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:df4b11a78ab8f8a3ee758a1a2b549c190ce1467cdd098a1c10468bbf6e76a596
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:433f19e7247d000b0001970b4584eff2933ef15d29f1f4e898592a6da72aec05
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:db6474d73c5c6591a3474bdb1103c27afdd8240b7ba40dd959418889df7a0d90
  name: gitops-rhel8-operator-db6474d73c5c6591a3474bdb1103c27afdd8240b7ba40dd959418889df7a0d90-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:db6474d73c5c6591a3474bdb1103c27afdd8240b7ba40dd959418889df7a0d90
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:dd1006c0afaa0a56f22d9d346d3d69b978a0492ad0924166a497e98a85fe0ed6
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:5caffc0b760b47873763ad9ae5f0ffe646aae4b5a3722578127dc27044ec6e68
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:4a37a117eaa1987890a77e3b39ca97a8a09469ce0379200e4aaef8bd9c0f74d4
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rhel8/redis-5@sha256:43a7cc6996d224c8e7b154c87a3c4ca676baf680fb9ac2a8a63cb3ef38303b43
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:43a7cc6996d224c8e7b154c87a3c4ca676baf680fb9ac2a8a63cb3ef38303b43
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3d6763adf8b705ccf29a36e14aa541793c08aecaa384e15d795bfac86fa9417e
name: openshift-gitops-operator.v1.10.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.10.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.10.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.8.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:94225b471f6befedf64a8e4e12f777059f0dc39ef7a9eb7030f168ced06e6dec
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:84d6d72c30f7eb877e6036ea1623766ac7cddc0e4639198f249dcadc3b605dc3
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:9aaffb8d856177454c59d05772b75c4f7f4416162bf63243b8c04146f9fb4309
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:62459d647b69c6fa0deebb9494cf7f874ec414742535b86109f680596077bd0f
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3d6763adf8b705ccf29a36e14aa541793c08aecaa384e15d795bfac86fa9417e
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87
  name: gitops-rhel8-operator-7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:a28832792d8f10264fdc4035efd75853e8edee7a5f6688204166d42fe67c7c0f
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:8576c7e6e548c5b032432f387d1468a5ea9c48d189250aa00c710ed1a28cbbbf
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:05a71242731d34b45e19f987ad96de9d32b6f731762312629f7fe3333f2f6ce5
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:954733d0c9c77cd42e65fcaa6b4b6f9295b5d43d2d81cecd82758f88ef2eb07c
name: openshift-gitops-operator.v1.10.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.10.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.10.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.8.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:52fb71b858a52c10e83146075bfb9346823b5c88991e11e76fe5d05d23447c54
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f341b0cf5544e2367b5c75f3e69fd756ef46b752603b8efb05697780d47a6385
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:f4f549765e94a737e8fd6b45791f92f85d6b53a9caa72d4d8fd5c897da8eb5c9
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:51aaec5bc3f0d41567feb7a1d96bcde031f3425a074b1ac214fae985be984985
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:954733d0c9c77cd42e65fcaa6b4b6f9295b5d43d2d81cecd82758f88ef2eb07c
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9
  name: gitops-rhel8-operator-8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:18a9c1b11d4a98229e2b4677bbc9e70ffa75d328c93fa9271e8f8ef271b65f07
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:185a220575c83072450d4727e23566ab7196303eb0ef0a103e09495103cc89d8
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:8b451b3245307f649798d85e2695f32d3e8909cb889a5f8fbc82971807d0550b
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:53d3620bb0490d83aaf6a356bb7d3b9e7147222d1a2017f8317f05fa90cd3de9
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:068284fc4f37d48851394b4f966065cec1abb8b8f291f147a02d932f151bd5bd
name: openshift-gitops-operator.v1.10.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.10.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.8.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:cbd0191606c0b6829e961ee150c402d958ace15eb227070be9b85a1baf43cd07
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:7228ca838842043c8d03d329515f32f17b6a0a7f54733e72d8256156ab9ccdbd
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:c00e4e56da8fcd4f10bbcf7c25fc083c2ce4a5760d01553dae2c25cf119eb740
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:582ad9d994aded118b3a9e3efa07114e9f0d905ba7cde3bd24bb70a117b02a49
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:068284fc4f37d48851394b4f966065cec1abb8b8f291f147a02d932f151bd5bd
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2
  name: gitops-rhel8-operator-3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3e4220ed171adaa7eb7a0246b9e31d0618d7a7fe382f6bdae0f98eb163b97ce8
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e38482fa28d9eb0c6bdded7b7a45521d3f650e2f8af5525c9581646ffba06f6e
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:9d2a2f41f5de2a3f157c8a5411dd04fe598082ee83840198508468da3559983e
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4a3a76792d91621f3e030ba96504e4098ec71e80856660f15a91643bb73e9d66
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e2f3dd4c2fd8f4b96cc52a16bd5f8612ae50286f1f828e3046803132827a744e
name: openshift-gitops-operator.v1.10.3
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.10.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.8.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:3529974f7ff19643f4b4dfd83a148342fbb867577c36c876fc6c3a8b20552cfc
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:546afe8958ce4951ba408f892b81a876a9c6a03c27050069ae8157708a268bca
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:18ce53864b6409de81ef453c8c798c52552f9bf0270d190667d7893b8562dab7
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:0f05921d56f32f02992e6f6fd0704591821c2e004acf50bac88a5883d814e845
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e2f3dd4c2fd8f4b96cc52a16bd5f8612ae50286f1f828e3046803132827a744e
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86
  name: gitops-rhel8-operator-3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:4243b76608f075e73a1ef2f6154d114942e08ccd8a4f6adb50f35c0ca7d44b53
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:9d0e7b689abc6232e369cb9834c1de85c1a93d6d9af1b484137fe5f55fd5e671
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:1ffb1c4df1108fbb35fb0a50fa2df76b9c4937afde88cba7fdaf71e66d851c62
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:48cf6065279581d33647ab384b9b22c444cab82d3da729f51b34af29cd8987ec
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:caae910cb099a74d24e3eab649231240bbb2064c8dcb059efeec5cd25b78602e
name: openshift-gitops-operator.v1.10.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.10.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.8.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:31bc37e53d133b22a29e56723f30d5047318e3b0e967d691432f6ef33a82347f
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:65ba3be6730c6726301cc44d148ae921129054251f350a985e4263619c4d0a7b
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:ffd6b3f3ff1589d0890f0d7d854792423a91d24dfb5b4980beee06223d9962bc
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:d2cec373b71e17082f4eccc6753a3c045b8851c3b5aa4a0a5c95d3cc6e7ba468
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:caae910cb099a74d24e3eab649231240bbb2064c8dcb059efeec5cd25b78602e
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6
  name: gitops-rhel8-operator-16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f10dbb128551f99e47625c12791eae697c78b93db263d8f337d207d518ab16ba
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:769d1f1c6c2111b17b619a526b3c67718c3f2c32231673157b43b017d58aa0f4
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:7e1104c6a789d482cee84afa8f6dcec82404537cf41f28a0165210a05a6ace89
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed2a8efb4fc40d2d6a09ceecaa0f16d6bea139e2d7afae6ba85dbae356daf59b
name: openshift-gitops-operator.v1.10.5
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.10.5
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.8.18\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:1253e8d1275f86da833366c69419cac77ae15cdbab596391102762ce950d1957
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:6821ba7a3b8d83c612be44c4da08f9b81c37c1fd678c88ef4fe7bebad7eebac3
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:92592634e85e605d9109a5daafecd26f1e9aa1cd6b017f1061b1afcc3afa89ee
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:2f412b1ff49de79fb093ab0729b55f9fa30a94033b218bbec66924fcc93b173f
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed2a8efb4fc40d2d6a09ceecaa0f16d6bea139e2d7afae6ba85dbae356daf59b
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa
  name: gitops-rhel8-operator-14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f958e855e3d1f5e453e8a1051f7ace2ab0d72e1dd9d6e818fbae0cb8ddc0c79a
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:67d034b21c0639843abe3379e061bc5f025c88965ad2b8b40b7017e98fe2eb43
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:dee7434207fbc9d6659e627dc65a0296cfecb325373408b7619550a318c7876a
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d3d498d1e716abe32ee8f561888966f5fa89a27d1426b6c0e0ec856e6a43d13c
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed530db9b4a29fb591ea208cd0c6b3b83b49537ff5a0a4f501b54ce667f9b303
name: openshift-gitops-operator.v1.10.6
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.10.6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.8.19\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:b5c8a6c7438a45125fc7fd970946f715ab7193b7446d625fae80dde9d1f3f914
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:4c842f0ea8f0e9b53eb16d94488fc2f4298bd8e4be2f48713be9157da24549e6
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:c779ad87a7f71d851c2af818abf16e5151c43d3fd54e64eac2fc7117c00753f5
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:a74e0a1fe3589ebe9f226a2bad20e9a5d5601a0e62c5f3290902f466f55b7160
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed530db9b4a29fb591ea208cd0c6b3b83b49537ff5a0a4f501b54ce667f9b303
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1
  name: gitops-rhel8-operator-b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:2bec31b0c5407ffcecfd8b860d8afb1629eaab31a250f60191f94a824e0a52f4
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:ece2fee4227ad1becadca47028b78ceaf8717a98ec84e3f1b5188a135c4b093c
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:0905ba3f5cf87780a1e95b6a00ea7cd340d4ed1b5054e4b2c82406270baeaefa
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d35dff5d59e748ef0404e7e76b0237ea96b2bb19b86fa04a3a34df7a379277b2
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ecc73c11bf2519f12239cca8b3eda47677e1dab70280b939585b94ccafa67166
name: openshift-gitops-operator.v1.11.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.11.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.2\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:026ccacb28b3467c1c4d87c16d599667ca6ef1d88e6f7be5d109c9e1beb7343d
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:bcd14086b093332f543516762227252069de535ef4590afc87f82785bc1b1791
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:dbbc313d051eaf2684f2c41bfe78a02a1fe5c587a40f3f3b5cde7dd5302616af
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:eda6b79cc8d138e83c21a2095b7c95662d4a6d748813889bad55ffb102605dc3
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ecc73c11bf2519f12239cca8b3eda47677e1dab70280b939585b94ccafa67166
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34
  name: gitops-rhel8-operator-84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:95a6a988028479e7bb8b9998590decf932b063780fb4a01427f1872c651ee3f2
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:429179e1b981769c179d6b99108796c5b11d75c2dcd468831b853974dfd1ad01
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:82b3064dd6199763c5197ed176f2002e6a8b6044749ac9568cf0b6148a5a2003
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a8ad0e76ce4cae9f9b36aecf125c4ed56fc2d776fe3df113d41bfc1c2f8b3602
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:421fe7d0784d75becc79de029884306a0ec893e6dc73d437b206881e0905009b
name: openshift-gitops-operator.v1.11.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.11.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:6b5928b6815b9fa65d30d50c4d217215a74066fbc8995f5fad33198f4eb03f2b
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:72cad8e848d595a9739d41491bc2a84686395e0628f5014c101f7aabdcf423f2
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:7e1846ea50255c4dc227cf282239cd9da9569f8ee78c0542fdfb2ec77cec53d0
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:1c09e217b4ea68959e381e233e56a586d18d673069acdc027a86d6ece4e17e77
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:421fe7d0784d75becc79de029884306a0ec893e6dc73d437b206881e0905009b
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1
  name: gitops-rhel8-operator-e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:ea8d078f9a1743fdffe53b8dd69c73f85e79da04ce596bc2d434be79795ff237
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:7bd0853dcd91f2a9feab6dc458cbdd2a24fc6407ca2d97310ba47c65fe6f514a
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:52245e51ae9eb08c3e163740c28137e6ab0221830b1342abf80b86fdcb0579a8
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4a3a76792d91621f3e030ba96504e4098ec71e80856660f15a91643bb73e9d66
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:32efac25ae3acebe9de6252c9ed46c3e8f3011bed3353b8ec6a88457a026d80a
name: openshift-gitops-operator.v1.11.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.11.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.8\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:21327966aef0f4fa235273c0bb304dd563df0944e2e37d914d67d3eeb8f03d38
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:b71cd1a4bf1aed9ed9a95d2507880027b97de68dbfd1b7ee85c127d8d73b0d62
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:7823c91b9a3c5c6f3ae8c55997071a70afe6127badd50ebefc05cca6a35f437e
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:516302ae0c1c13adc786e1813565166bf6b3742b60842f6e4285713ccc645bd8
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:32efac25ae3acebe9de6252c9ed46c3e8f3011bed3353b8ec6a88457a026d80a
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123
  name: gitops-rhel8-operator-2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:cd650997edf73e47f21547c531ed2c6ffd21d7bbff44757db82823c8cfec9d97
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:1059b73fcd6c7f69f31f85b5935cf0f397a8fa5dd1d2b6e471946390cf35b1a3
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:50831879220452248d2402712c6d14a5954521b3fe271078f10b0e97077ee041
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:48cf6065279581d33647ab384b9b22c444cab82d3da729f51b34af29cd8987ec
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:648d9e94bd34d93d425132a80b445cc2113f8068c803deb1c241fe73e1b21b56
name: openshift-gitops-operator.v1.11.3
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:57ed4e985ada9a24f97d47fb999501152302860f387c751b860e121f5b7d9533
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:97ef10c9991f23d9c36c03857c507972861147e1586fc036345387289dad0319
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:bb253ca58777758c7ec6718f0a229df40b66a9b32faa5c9a6344b581b6503175
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:d9be2a653a5193dfdfaf33b2de16ac76ddb19392cc261f13de9b44768998959a
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:648d9e94bd34d93d425132a80b445cc2113f8068c803deb1c241fe73e1b21b56
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8
  name: gitops-rhel8-operator-263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:079c21577967b8328eefd09763b375f72ccaf0a03c418f98553f14e809c1938f
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e53754f4808ca9576edb583ae3c18572085068133d052d2857666f8e935b28cf
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:1e7b2df6b7cae5116ea4769fff22225de1b943d6e1f938588b8aec9658fe2a88
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d8d9a224745f1952819cf831620d5b4ef08f905d80b33d66e4043e5b0163b06a
name: openshift-gitops-operator.v1.11.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:899b56e094a3089b527d09b75216c68ca1d3718ba6033efb94e3790370089f1d
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:bbba00b566fdedbd0fe92e879aa7d0b23b1103c52e23c309e7a20c7616b845ff
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:6a007e20bbdc4dc5ac065586dcadf4eda0e23804596d7116b8673a145ebac644
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:45779bafaab790b1ecbabe1806326669d05e3861574a03650e57df1ddd5895c0
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d8d9a224745f1952819cf831620d5b4ef08f905d80b33d66e4043e5b0163b06a
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f
  name: gitops-rhel8-operator-f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:82961e62b846ae5d62e2fbf8c215a4a4d7217f2846f258d5054072bfe3ef84cc
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:108499d60ed3ded63866986a66c26ed6a435e0d61d7ac917bfe7a72224af8545
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:49d863d92f298f5fd17b64815d7e5bd4c9ee22090497e62e7129c1aec2757f71
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d3d498d1e716abe32ee8f561888966f5fa89a27d1426b6c0e0ec856e6a43d13c
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:88a72e0653b7393fc6857838932415a53c1e7592203eebb8ebde5a66ea5b8bb8
name: openshift-gitops-operator.v1.11.5
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.5
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.15\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:5cb593d8cd293e27d43d6a4c06a8ddb79b4988c6de9a8ebf3839135a15813551
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:25b5f3e1cacec7d92a713a2e5f63868a223e5422efa9d609d94229c50a94fd60
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:4c8baf9babb83b1269af0f93f392ad76df9abe22757183f125bd33f28ca49377
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:57eb61c6526caf5d71c5c3ff2dc189d2c39791e1cd50633cd8636f60bf068524
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:88a72e0653b7393fc6857838932415a53c1e7592203eebb8ebde5a66ea5b8bb8
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967
  name: gitops-rhel8-operator-b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f0defae99e528b6b42fff97ec3d51a04c1b3b59e2c7b0aefc7ababd4c86ab99e
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e1066315858056bdf5eca641ba26a7ed38bfc420eb843ca1e0334d6769a85268
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:2298b6bd82d6e8df7c2325edcb53462b290979623195d78245b154c7153eaa07
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d35dff5d59e748ef0404e7e76b0237ea96b2bb19b86fa04a3a34df7a379277b2
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9357bd76c40ce6d7fdf72075b7a8c0fac132017390cdc3864768947b48347b94
name: openshift-gitops-operator.v1.11.6
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.17\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:25bb626bb410fc2f52515ea02142521d5bd450a55906c5ef3d7e6dbec7aec651
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f13b583c622add60e589bb4203449ba30c46cdf70ec317905b7390ea085c9067
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:1d26fb9c63de0cf8313f7c84ff10670cfa154e905eb6a8f84f2e01e520f6ae72
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4bdb2ba05bae0dec2fe27d5017955f13790632dadcd4a2fab00f6c87fc22cb29
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9357bd76c40ce6d7fdf72075b7a8c0fac132017390cdc3864768947b48347b94
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782
  name: gitops-rhel8-operator-8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:25f8e1d7e446e4e8a6a1d7a9005aaeef0d1e4f64200c1f3f82a8ee631949393f
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:4e62dc3e56e3e3451f3fb7d3d8b3ba9e80a5434a0c127791c314c7b9b868e8fb
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:d05fd5cf87e5af8e8104d3601456c0b66ffb3afeab42b84b97666e5bfdc0e2fe
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:3c56b368899480497fd5c55ffa9b91abeb2171f11e22533e1a80887a334e369e
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10eb0167c80df873a452190523d10a1013dc587d081d92e90d53b678ec7fa252
  name: kube_rbac_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c36a557c9dc2ae4479c432933a9a4dbef38f2be53360a68a5b6befb614d01dac
  name: kube-rbac-proxy
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:72d69c8661dd62bd4626e2d169b0632b42f1f0c1f7894a165d18bb8e88de7270
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:31bdff225bd825d02ce0f468b1edc77541ce85b7b9111f14a583c418c984232f
name: openshift-gitops-operator.v1.11.7-0.1724840231.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.11.7+0.1724840231.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      olm.substitutesFor: openshift-gitops-operator.v1.11.7
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.9.21\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:c94c2167dc957856682a104b9a6187d3d321dec71ae794acc0dc37794d2cc373
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:42f809f32f1d43186b849e3cc78063d3ebb2b54c55b2a1b77908af09a5ce044b
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:eade50b8321c1b2e0a8ac4dcb34596d43dea0a137b8b97b6eb68c6d469c8b200
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:959de6a95ef8978f66fdbe1033bcaa0ddeff9a376023e5d1d2698c5acb417305
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:31bdff225bd825d02ce0f468b1edc77541ce85b7b9111f14a583c418c984232f
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401
  name: gitops-rhel8-operator-d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:0df37cf0a0e48efae02a0711c6da61c6165e7856db97097e98d56c8b6a137bb9
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:7ea96000768b3cf7711150531c4c1c7edff2c45a2f29fe10bd9811ab6b281909
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:4d22a7a6cc2f0442889512267ae3d9356f05ff0dfdbbe137c3d8ebebc24818c8
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:0b926fc9eae775425faa1ab9709a36fdac15afe4bfe523720e17ecf5df45bb28
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3fa644bec41139a112afab1213c66ca234b57ab2314066d1c758a36f091d9497
name: openshift-gitops-operator.v1.12.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.12.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.12.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.10.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:d43d307dec082bf1b2166249e39acdb14f2f57f6bf343d92ee0697fcb0a26901
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:152d1c8f79d1b5d216650a8bdb4f74f440457312114854c03fd5d32ed8924900
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:3d01aaca7c1fc2923d75480f1d836473574120a308a9d1aba2a105443dc703e1
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:fd5bae5c028657d4f8069205061c29c374d410cab053b308ef2750358fb63124
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3fa644bec41139a112afab1213c66ca234b57ab2314066d1c758a36f091d9497
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2
  name: gitops-rhel8-operator-8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:330fbaed959f495f18a794ddf5cda89cd4d9a25903589115dac9678814cba593
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c096777ef1262a2bcb59a8f517fa00c51ea9a76acd81131788d420c4b7a5b60f
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:4e1e7a837f998df619ce555bd4ea154c7b392f104203e03e6a82256c5941d307
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c5df7064de09d09b86003872ca032b6def36feaad63a303cc575a8feea704bf7
name: openshift-gitops-operator.v1.12.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.12.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1beta1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.10.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:fb289e716a41857c316e8904cbf3540d3dfd4e62c6761c7c73111c6c0569f8d2
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:baec6d73a77b832df8131bac3c5a86dc405ef89f600e27a22f164ed3c72816db
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:92723fab7fdffa6c1bf5033fb895153143fda947911bc5b9834ac6350bc5f6fa
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:aaf2a33f40d7a27d33bc79262d8f72d07ae27479fccc654c6637de99a134fe6e
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c5df7064de09d09b86003872ca032b6def36feaad63a303cc575a8feea704bf7
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f
  name: gitops-rhel8-operator-b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:4ffd0b2e2ffc1d855f11938e58ba92a67cea9fd289a1521300ed9040c2b4f55c
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:3deed959bd7bc2250af55ac57b3d28d4b60bf74178d60ddd9d5ade1a4041b81a
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:ac39a30fd9fc69bbd9c3ad6ecc32e5e6c0a0fdba7ce19c98378fdc40d9fc791b
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:979af763119468cc4a8923b7c990273dbff274f53f64ff3d27b1505326442425
name: openshift-gitops-operator.v1.12.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.12.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.10.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:82dde892c3ee658a5aa6bd1538428e80f572aa7e7c9a546785a495522d9cdfa0
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:bfb33958b28d7067b5bdb6da7e8e0ca9de9c7832df917e7611e6ca517004b654
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:6ea88874dcb954539be97c2d6ec65888995a5ea4047564c517181d09f80331a9
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:0c5d8e0c18f4e7922877ab8dfdb36be80a0bd8a04fc08ab25c36372d6cc45a47
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:979af763119468cc4a8923b7c990273dbff274f53f64ff3d27b1505326442425
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4
  name: gitops-rhel8-operator-c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:7196a5906c5af920a9ae1099c8b18c070e8e50fe25a6fe0d29af048f4a984099
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:fc367a55f9ebce4b2fded7f1d8880d96285ccef05ec202cdf0ac028c3b38a43a
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:9bb198a939530d852b6307b1e03edf44f51177f3e15cf2e7e5d2ada4abe8b46c
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d3d498d1e716abe32ee8f561888966f5fa89a27d1426b6c0e0ec856e6a43d13c
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3da4a6840665ba50c699bf22a7258ee5f6912c589a3a1b278caa887c877bf9f2
name: openshift-gitops-operator.v1.12.3
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.12.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.10.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:f5184b0db0271f38910e7a52a1703327e164ad8569d6c9ad43f2f840b5c7f70c
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:5bfc4686983f9c62107772d99d900efbcc38175afe621c40958035aa49bfa9ed
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:4e18c4569a1e9043f823582da4110d15fde2b6ca9bdef2cb68d6cea393db9ab4
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:1be358ae4610ca430efd2a4469d536e4243332f814ee5a909bad03c2889eaaa4
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3da4a6840665ba50c699bf22a7258ee5f6912c589a3a1b278caa887c877bf9f2
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b
  name: gitops-rhel8-operator-2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:770c4f854f2f92766b3cac1326671140253491d033c42c036dcd75a4762783a9
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c27bef6ba6ce0dd476be1f9d48789ee8fec535fd93f6472dfa8f4c5de4f632b8
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:cbe88ac35fb4539287859801a4843948b4d50496ff67cfd189a16c0b45bd0d65
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d35dff5d59e748ef0404e7e76b0237ea96b2bb19b86fa04a3a34df7a379277b2
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9bb74df8ca3491846b6df8313c96f99d58334c1bee8004f816777c39838ae54a
name: openshift-gitops-operator.v1.12.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.12.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.10.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:02dd8b426564e8f19bfc178af414f5663527e4ac0ec0dd848735fd839bf96ac2
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1f5efc7b39bb652f2b92eec117d212d4166ff56ab7628d1c041b37aa954c5728
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:767fd403910c9cbf8461b59856484e6e0012f8fbe940fa0290275e3f300bf806
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ae5bdd1138d20276826f37ad160a7ee1071e95b0f0e99d987dba09ae2cdd5f22
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9bb74df8ca3491846b6df8313c96f99d58334c1bee8004f816777c39838ae54a
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0
  name: gitops-rhel8-operator-1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f49708f5e1d0b0b40c1ea61ed82fa4ea35fd1f8eef76b714c5484532e715996f
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:13dc04778f36eb778918279f9f233bdf0be7119189e2d8cca34fa8c40cb4920a
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:784f3fdaa90e35714f77df205391adfbc1662bb38eb437f3900ced35e5afeee1
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:d7f8ad8b52c82644cb48e4d16bdfa7f9536f077668e7504ad06ba359748df86a
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c36a557c9dc2ae4479c432933a9a4dbef38f2be53360a68a5b6befb614d01dac
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:07091ba15a3f17d7dfd6c5e2dd5b951a338cfd833106f057c24993d57595bd92
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:7977eecb1dc05d639e94c84715ea2a5ced158508524ed0c8487dd3da3fa51fde
name: openshift-gitops-operator.v1.12.5-0.1727371523.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.12.5+0.1727371523.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      olm.substitutesFor: openshift-gitops-operator.v1.12.5
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.10.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:0b88e9a0f02fef6334f173e71588302fdd08e675f372d0f3fd445b61f6e7e7d9
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:217c92bca577ece7d2ea856e4d9fa1dcd9325e326733676519084a13e3241433
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:1a2b824ba334ec626a77502883f24e4e6568ed53924b244c724a39128ce4e979
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ae1469bf6338d773b25db8b2e5fa948787051dc248f8221b0714690407b0ecfc
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:7977eecb1dc05d639e94c84715ea2a5ced158508524ed0c8487dd3da3fa51fde
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2
  name: gitops-rhel8-operator-331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:91c0eb12e0e2301d1478466a7fc20195376b4cf30f214e7a73316379ac5c489a
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:375d0194331d65b8b3ed65a9d7677d6c604b4e10ae23a0f500c9b61908a84aa8
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:e65cced9d391485ab8836c7e3f32dced228fe1e55a37eab37d17576075535612
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:0b926fc9eae775425faa1ab9709a36fdac15afe4bfe523720e17ecf5df45bb28
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:80198f65f7e3f9022a34e0342e9423807b855dcb7bda810172eebc9a27afb5c2
name: openshift-gitops-operator.v1.12.6
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.12.6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.10.18\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:33bbb88343285a0510670384b87d0226dd6de8aa12c78b68921362c4d6f5a6aa
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:dbf3038daf7c797123c511f9a609c3485cb1a5bcae53c614fad17e0a65fa7ee3
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:b5736d1106db29fcdf42328ca20b96382d4339f90b97a07120ea73ee174ea1ad
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:7d82c719b1cef64607d30e8aaa5ab293955771c5b1dbd430e0befc988a43356d
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:80198f65f7e3f9022a34e0342e9423807b855dcb7bda810172eebc9a27afb5c2
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8
  name: gitops-rhel8-operator-48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:73918f3b3c507fc64006b7a500ecfa9d58151d694852f696c41a4412edffc78e
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:1cf485a889c7586cb4944f000b53c0e97d08f97ba14e580bec57dad7cb13712e
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:a1d4e26ea755181818401697f18260b9e876aa441be14830f9142081ee22a24d
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9e0fee30842a16d7b8a39d336123c80c5271cb2ceb50759fc7ee51a4ed09ceb3
  name: kube-rbac-proxy
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c30f98829b6f0aaf49aea0fc05d4976726c7a4af38f01c3b74b34127b334203c
name: openshift-gitops-operator.v1.13.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.13.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.13.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.22.2
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD stable\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:07e84df60ec4a313bda39abca4bd4a9ad6597df3ff3240d833491d6b29c4ee37
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1dcac4997b67968ede38731302cff073daa15b7e2b3239b145b7b8aa080cf0fe
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:4b94d8928b03569e271e064c42c535d231d3ecbe891dc7975353832c613da47e
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:84a656b82ce1b8ca952ff2d885875980cbf1a6c21dec465a678194f70d74d778
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c30f98829b6f0aaf49aea0fc05d4976726c7a4af38f01c3b74b34127b334203c
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c
  name: gitops-rhel8-operator-2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3cb2ff9f42b219e8ad626976a15330cf835b88cc69b7f601b6af8a4d0d1ef3ea
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:5a8df38189bcb7335acc82bb936757e0fc09e4800cb5e8c27c153e69d50ddda4
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:ebedd17fa39941419370e0701ded91f60128aa98851266f5ccb50e0a53b39b39
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:d7f8ad8b52c82644cb48e4d16bdfa7f9536f077668e7504ad06ba359748df86a
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c36a557c9dc2ae4479c432933a9a4dbef38f2be53360a68a5b6befb614d01dac
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:07091ba15a3f17d7dfd6c5e2dd5b951a338cfd833106f057c24993d57595bd92
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b19fb714784fa74033214d26a368ec13b26452772c0c0384c569c266392234bd
name: openshift-gitops-operator.v1.13.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.13.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.13.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.22.2
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.11.6\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:fb27ba9df1514651ab8e697e83bb4fa6be533d9d3ff38fae7de599013821aa01
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:9f279d1b24707edcce42e500f814c9f7d8dae5b438bd5be20937f507e696f41c
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:68fd3c32a6b689a7d77573dda018f28f3906460a08f48f35cb8560e95fb898f5
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:6e6642d331e18d85ca68e42d6d6199b6fc2e18fd31126babaedf5ee19b368d8d
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b19fb714784fa74033214d26a368ec13b26452772c0c0384c569c266392234bd
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844
  name: gitops-rhel8-operator-4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:2656929aeffdbbc18ae8aaccd355006e1ce607f4e7a532e5d37e5991e537de6c
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:32a1b69a5eb8da2ca69ba1a0e1d2164892fc1d739fb9ba17ad526bbdfdae5195
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:957b9de048504792b15e002e04d47f7b238d82b72fafc2ca8623b31094f7bf86
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:6e2a83ef46138cee4fe6dc2d498904350dbcfb91cc11ff0eadbbeb5ca031c296
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:55a49d79b9d29757328762e8a4755013fba1ead5a2416cc737e8b06dd2a77eef
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:72d69c8661dd62bd4626e2d169b0632b42f1f0c1f7894a165d18bb8e88de7270
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:0e41fde95f2b68ce8c359e4370accb1f5526382ce415a6b9eba8cdf18e188c94
name: openshift-gitops-operator.v1.13.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.13.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.22.2
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.11.11\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:a60f1cfc0f23f7bf3bb58d269d4331696040e11cc384abefb7e7d62af84d88c0
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:772000bbd1f29a97f30e260f69601405352ef4ad7cac8ae283072213314016c9
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:1ba28c7afc98166ffd35ab46f774019defc54178c72ed3f104e43f079fc9d625
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:51ab4e9adf371488686dbc36edb6c4746eb1bd9ee4eff3c5f8bee1971b64ee33
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:0e41fde95f2b68ce8c359e4370accb1f5526382ce415a6b9eba8cdf18e188c94
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587
  name: gitops-rhel8-operator-4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:25a23ccac65704d70adcf7c639d32dd8812e9a01ac171bb18c22d24c2bdc4a92
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:679ebf25f149f25e979cfb113817342579e899ea6e6d92c9b7d43a66a3a143d2
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:40d0ac2a7c8e8d2ca3ef711608981ef11186c114b62b6befaa147d9fd4ea0865
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9e0fee30842a16d7b8a39d336123c80c5271cb2ceb50759fc7ee51a4ed09ceb3
  name: kube-rbac-proxy
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:f04d565eb5162fd5a9c78cd8443af6a3b184a660277537f1d6d575caa2e85441
name: openshift-gitops-operator.v1.13.3-0.1741683398.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.13.3+0.1741683398.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      olm.substitutesFor: openshift-gitops-operator.v1.13.3-0.1738142397.p
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.22.2
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.11.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:d4d5724f67859d24c32f0f5735f5af3e325f77db97f58bc7f17ed4b831b7e534
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:8a7c3e31ce414e6c6fecf1652343b22c52502902676bf4d7a75bf42bdabfca06
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:a366229e6ee26ebe2d7f765b2a2da6057a29e783835655b5d97545ac563b541a
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:e87515d016565bb69cb2c2ac40432e0127dd2cb20a490ac82019836032ba15e5
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:f04d565eb5162fd5a9c78cd8443af6a3b184a660277537f1d6d575caa2e85441
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17
  name: gitops-rhel8-operator-d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c02dc2c79ee24ce5450ea4e19493ac2a1997eeb5bfd359291642c529826d0cdd
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:b982df02ea7c45a7603d83fe82cac12e1faac303a1b72af6a727512bb97441df
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:bde11fa83b7e708677b08ea995041f480b88edfb93e4a62c10380d101c0a349c
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f2804bc2af437ff1f06c214b48a1a780dfcfab995650d901c03270057eb9f3c
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:610437902999bf406e6284a1f587e055e4ccc36cc4f83f3cf5aec2981843698b
name: openshift-gitops-operator.v1.14.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.14.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea
      createdAt: "2024-09-13 17:23:26"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.14.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD stable\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:44475429eb08f0acfb08c35e65bd2870535634cf76156b870a3585b1cd4c8b30
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:383963899a0c606386475f56adee23fc9c43f02a3fa817845d683e68b2ec8360
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:b022c3859eb6bb5de60ce9760d0d9a23617bc9906a3487969c45604f9aeb5acc
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:bae83c4de42d55ca49cb443c0cbfb39a8318487d6d568a6aae03ca0b583eda64
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:610437902999bf406e6284a1f587e055e4ccc36cc4f83f3cf5aec2981843698b
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea
  name: gitops-rhel8-operator-91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:7be504945c8b7ce6b7b6f232309f3fe15b8e78d8003ab6655523541c03309cab
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:56f22d670b05fee32e91f0fbd5925b55351b4f6df621bc40b2719427df9df93b
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:71c2a5a88f0b4d5f93cb669cc6d900d71ffb70d87b70b1f90bdfc909fabacb9b
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f288292071ec742e0c420cc19b8abe0ab5d95c447f01ce800bf5bf434270b616
  name: kube-rbac-proxy
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:53daa863b16b421cc1d9bc7e042cf1ecce9de9913b978561145b319c2a1a8ae5
name: openshift-gitops-operator.v1.14.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.14.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46
      createdAt: "2024-10-22 16:09:59"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD stable\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:f8106135dc58898f6b81d36e9158a192272e600d1db69ae207cb97dcd4eccb6f
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:97914aa40ad6bc2f01e3eaac4448fbebe0ea0cb0f971b11f69581d545618fe8e
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:df64830277b275211c369cf7f51cddf9cc1d753b1a78be42b2dcb1eddd2aba60
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:9116e1adc24db19136ea34b8faeba3b1003228621d81b716cbe4ec4d61ad6ffd
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:53daa863b16b421cc1d9bc7e042cf1ecce9de9913b978561145b319c2a1a8ae5
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46
  name: gitops-rhel8-operator-84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:ffbb287bde27ad176f9fe52b2cb52c323507c7d657be9d144e1d520c0415d3e9
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:19ae5ec397baead9627b61fb5802692b37148bacef897bbec829d92a6a8c67ef
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:7fb645f868c9bf88f8bc1b7c8ff65a991bb9e7030b005020c241cf67aa474b8a
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9e0fee30842a16d7b8a39d336123c80c5271cb2ceb50759fc7ee51a4ed09ceb3
  name: kube-rbac-proxy
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d23d78b4cf03a3349733c249fc5b835f105227a19044ab1e99bbba8d30522595
name: openshift-gitops-operator.v1.14.2-0.1738140086.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.14.2+0.1738140086.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a
      createdAt: "2024-11-15 04:13:36"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      olm.substitutesFor: openshift-gitops-operator.v1.14.2
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.12.7\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:384fc02125e83db1047480211392ed5ea29b4bc254a173cae347c71480a339ac
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:706d5c99715eece77616135da2fbf90863b7aef17fd64ab03bf7dd20877490ec
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:51a735ae58bff96f0d1273b9b9ecc7bef36803ba756279f1eb8926d84b71d896
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:5aad57bedf3a3e6b2f4c21446a4326efb76a16c6727a3d941e95fe60112580f2
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d23d78b4cf03a3349733c249fc5b835f105227a19044ab1e99bbba8d30522595
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a
  name: gitops-rhel8-operator-73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:93698c7fe8c0d1120a9cc3e451c3d46adb3a60c0e0ba09cf06a3c83f915b9cdd
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c99a697826257ecaae50c20a0e0da188bb97d506de749580a5d291a9410ce8a7
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:0e4dee6469ff15e71c9925bebcb68510d2cb14662429f2bfea065bbc0b4cc316
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f2804bc2af437ff1f06c214b48a1a780dfcfab995650d901c03270057eb9f3c
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:661f30eb3a6f0c2413b352d246294124f144828781897d1601da56c124946ea8
name: openshift-gitops-operator.v1.14.3-0.1746016855.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.14.3+0.1746016855.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ad4ec429fa666528c19004ad67c11a259a58f4403843131bd5c6d4b2c50de9bf
      createdAt: "2025-03-18 19:44:50"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      olm.substitutesFor: openshift-gitops-operator.v1.14.3-0.1742836272.p
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.12.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:96b185dbad4c20f49f21ac3334d946305c5184fc0fb1aa6b88947fe0965973d8
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1da78d7c29119624b34ef5e068f3e92c66a6e521f36fa4f899d3ef0ff76b178e
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:d58867e8597e5f02690a50e2f477dc588f30332ffd051cff5082d90d9a2f29e2
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:3281d823168057e436e4691e0f521883bc0829d01b3c1ba92425650fa399b49e
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:661f30eb3a6f0c2413b352d246294124f144828781897d1601da56c124946ea8
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ad4ec429fa666528c19004ad67c11a259a58f4403843131bd5c6d4b2c50de9bf
  name: gitops-rhel8-operator-ad4ec429fa666528c19004ad67c11a259a58f4403843131bd5c6d4b2c50de9bf-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ad4ec429fa666528c19004ad67c11a259a58f4403843131bd5c6d4b2c50de9bf
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c6022c140dbe5a12eb824859323dc61bde95f3508f6211df613f40f28abbb263
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c87ee6992800c509249db5bf9af07e47e75151e4ba637017aedb1caf09fec0b0
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:245270d64a69cf2b65a30320ee0cbf4622f02f40d919c838d02ad6b42792fee2
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:be4eb8b8d0e1f67b0b420666f9621c7bbcbec1137fa731c4fe542ca789fac9e1
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:535832825409c5ff6207e37ac60b1fe8c2661073612868933f9ae27b5c399d5d
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a47afaa5ae506ec5a2c18818822f8cd626055168ead3183fb41a7e4338f8517e
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:71cccf38513491b0e46a3c40a10a94f5bedadf3c4c295b2faab9c7ba13ac4bf5
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:0f81bae9f081a2cd1765f8aac8742ae48e4d6ca0b66bd517deb04b41847e7197
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:17dc1380c8974b404745300420f3d64d3797db1b335351a38f4b2e8492da624c
name: openshift-gitops-operator.v1.15.0-0.1738074324.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.15.0+0.1738074324.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f
      createdAt: "2024-12-11 20:11:50"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.15.0'
      olm.substitutesFor: openshift-gitops-operator.v1.15.0
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n##Components\n* Argo CD stable\n\n## How to Install
      \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is
      installed in the `openshift-gitops` namespace which has sufficent privileges
      for managing cluster configurations. You can create additional Argo CD instances
      using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:c698338c0b8c593cd6e79101b929543c5222b3bd09978d6a8f72095f10fd28c0
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-extensions-rhel8@sha256:6bfd32f9757aab4ec33b37a75f25ebaec7a18a00ece57a8d815cc6183854395b
  name: argocd_extension_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:2808a4a071a0ffa6960e40cdec1d2d2905d6116fe26c553612edabc7c2235a34
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:fd740490fcb9e8885f6645098cdbdd95e5c208acf34e54ecbe7edc917febc183
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:d25c69ecbc7254d09ff3974ec741c290d19af7803e659feaa07b3098d9fec4dc
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:17dc1380c8974b404745300420f3d64d3797db1b335351a38f4b2e8492da624c
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f
  name: gitops-rhel8-operator-2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:e8929708ec39a24ebf7c746bb1e767ad10a1ee11b10b1324b81895daf8859d1c
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:43e347a90fd890601d1a5fe4536e8138615251bba584c7b8881ce7bb5ab090bd
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f2804bc2af437ff1f06c214b48a1a780dfcfab995650d901c03270057eb9f3c
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:5250d644e80aea794b0f732e9285883a4348dace83557f177f64d78fe4dcabd0
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:8a0cde220937294ed559ee9dcbcdc840956270fdc66e917a0fe5f5971cf18f4e
name: openshift-gitops-operator.v1.15.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.15.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ef8d7654505d37f8b6b1fc2b558292cd81dd8d478584929c87e596c91a92ca99
      createdAt: "2025-02-21 05:07:37"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: ""
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n##Components\n* Argo CD 2.13.5\n\n## How to Install
      \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is
      installed in the `openshift-gitops` namespace which has sufficent privileges
      for managing cluster configurations. You can create additional Argo CD instances
      using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:d8d8e5fa421295473eb8cfbc51fdb56367df15954c485ebc1f5374ddb3c55039
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-extensions-rhel8@sha256:de4152b1f4850267b0d0566cb9e5bd3908bbf1acd3f5d4a54a5d8d38b6bb8f7e
  name: argocd_extension_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:0e98d2a7ddbdbf585564451b602847fb8189a264d49a53ea825ed3a10718e266
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:5d7cbdeb50feb6db73dbfb22b55f9f5147ebe977cb6fceae8b28b75e9ac48862
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:1097f8e706d37ce720dd5d99930c8ec4e2ded8c748b4df052177902aa6cba673
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:8a0cde220937294ed559ee9dcbcdc840956270fdc66e917a0fe5f5971cf18f4e
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ef8d7654505d37f8b6b1fc2b558292cd81dd8d478584929c87e596c91a92ca99
  name: gitops-rhel8-operator-ef8d7654505d37f8b6b1fc2b558292cd81dd8d478584929c87e596c91a92ca99-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ef8d7654505d37f8b6b1fc2b558292cd81dd8d478584929c87e596c91a92ca99
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:d7232daa5837cb8021a7a70b821d62cd89e8bc057e255fa1323aff8c25a98674
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:0f6a86cf106c4b2f07cee9300ac3377531321e3ac8e251472a0d7df175f15d7d
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:be4eb8b8d0e1f67b0b420666f9621c7bbcbec1137fa731c4fe542ca789fac9e1
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:535832825409c5ff6207e37ac60b1fe8c2661073612868933f9ae27b5c399d5d
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a47afaa5ae506ec5a2c18818822f8cd626055168ead3183fb41a7e4338f8517e
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:a4e049bc3c3a122a93429f296417d5d30c4a82c9283550967536496174073cc2
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:5aae6ed0346240c17e62fa32425f84a8ad45498a9599a61bcc324bd17b2e54ce
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d9579f4787fd863b805d80484bd08c60bb466bfb617dbd6527499e9fd56794b7
name: openshift-gitops-operator.v1.16.0-0.1746014725.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.16.0+0.1746014725.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Rollout",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "RolloutManager",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a932c0397dcd29a75216a7d0467a640decf8651d41afe74379860035a93a6bd
      createdAt: "2025-03-27 12:57:27"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.16.0'
      olm.substitutesFor: openshift-gitops-operator.v1.16.0
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n##Components\n* Argo CD 2.14.7\n\n## How to Install
      \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is
      installed in the `openshift-gitops` namespace which has sufficent privileges
      for managing cluster configurations. You can create additional Argo CD instances
      using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:d9a3bdfc065e411366cae919fffc5d37ee6125357b45c78a08960ddf978d96bd
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-extensions-rhel8@sha256:64dc5e6ee93fe076829e758087a69691752cfd26fe340ec12ab953b38dac2558
  name: argocd_extension_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:94e19aca2c330ec15a7de3c2d9309bb2e956320ef29dae2df3dfe6b9cad4ed39
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:58b2692840dc5c109e9a676b0338db73e15a8ce2ff565aec0c323ce1b3bda3a2
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:9a17cb3f6a43b574d27233bf6ca145d38aa38195bed33d29441c9dc38ff317a7
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d9579f4787fd863b805d80484bd08c60bb466bfb617dbd6527499e9fd56794b7
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a932c0397dcd29a75216a7d0467a640decf8651d41afe74379860035a93a6bd
  name: gitops-rhel8-operator-2a932c0397dcd29a75216a7d0467a640decf8651d41afe74379860035a93a6bd-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a932c0397dcd29a75216a7d0467a640decf8651d41afe74379860035a93a6bd
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:ad29541907555a998d7380f7eab97342126e63a502845d40237dac4cbf755b23
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:86d0c9efdcbb9923a30cd21a6b0ba9f92accadf6a200de2f01e79880f6e236c8
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:72817b62a55fb0f82f2908effc7bd3d20409fc60e9f228449d8f78eb390e22ac
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:baa41441752d6d739065eda587b92402e209c67fbcdacf0a40559d37c9e978eb
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:cd1003ba9e9f51e132729592921201c8cea8b020442d96e72c9975d423915d10
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:cf52b301f1c37c1de925bcf7e16005b0a3a1865645db29fd671d47db592da1e7
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel9/redis-7@sha256:848f4298a9465dafb7ce9790e991bd8a11de2558e3a6685e1d7c4a6e0fc5f371
  name: argocd_redis_image
schema: olm.bundle
---
image: quay.io/redhat-user-workloads/rh-openshift-gitops-tenant/gitops-operator-bundle@sha256:8df04d93a71baf754db7ebc4c854a12c958767d4d2c633a6398cbf5363b98538
name: openshift-gitops-operator.v1.16.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1beta1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: NotificationsConfiguration
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.16.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "NotificationsConfiguration",
            "metadata": {
              "name": "default-notifications-configuration"
            },
            "spec": {
              "templates": {
                "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
                "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
                "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
                "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
                "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
                "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
                "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
                "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
              },
              "triggers": {
                "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
                "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
                "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
                "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
                "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
                "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
                "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
                "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Rollout",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "RolloutManager",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1beta1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:adb171142d660b1a848605728aca529de47b5679f9c87e6039ca6a542cf17f83
      createdAt: "2025-03-07T13:13:07Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "false"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=1.0.0 <1.16.0'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-gitops-operator
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.35.0
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns
          are like Jobs in that they eventually complete.
        displayName: AnalysisRun
        kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - description: An AnalysisTemplate is a template spec which defines how to perform
          a canary analysis, such as the metrics, its frequency, and the values which
          are considered successful or failed.
        displayName: AnalysisTemplate
        kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        displayName: ApplicationSet
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - kind: ArgoCD
        name: argocds.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1beta1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1beta1
      - description: A ClusterAnalysisTemplate is like an AnalysisTemplate,but it
          is not limited to its namespace. It can be used by any Rollout throughout
          the cluster.
        displayName: ClusterAnalysisTemplate
        kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - description: An Experiment is limited run of one or more ReplicaSets for the
          purposes of analysis. Experiments typically run for a pre-determined duration,
          but can also run indefinitely until stopped.
        displayName: Experiment
        kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: NotificationsConfigurations contains the notification template
          used to generate notifications that notify users about important changes
          in the application state.
        displayName: NotificationsConfiguration
        kind: NotificationsConfiguration
        name: notificationsconfigurations.argoproj.io
        version: v1alpha1
      - description: A controller for managing Argo Rollouts
        displayName: RolloutManager
        kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n##Components\n* Argo CD 2.7.6\n\n## How to Install
      \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is
      installed in the `openshift-gitops` namespace which has sufficent privileges
      for managing cluster configurations. You can create additional Argo CD instances
      using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    maintainers:
    - email: shbose@redhat.com
      name: shoubhik
    maturity: alpha
    provider:
      name: Red Hat Inc
relatedImages:
- image: ""
  name: ""
- image: quay.io/redhat-user-workloads/rh-openshift-gitops-tenant/gitops-operator-bundle@sha256:8df04d93a71baf754db7ebc4c854a12c958767d4d2c633a6398cbf5363b98538
  name: ""
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:7864909b57433f9a16a358c145434f45cde2b536b197fab4ed997e0811ebb56f
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-extensions-rhel8@sha256:64dc5e6ee93fe076829e758087a69691752cfd26fe340ec12ab953b38dac2558
  name: argocd_extension_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:c6e2e29b23d8481b9da8bc452976f2913543bc1e061f0242c85a92bc00a96f81
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:a6fa90983c9d3678aee0d3581f104590cf7046b2b2ce3a9941e4360bd675ffe5
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ad6bd7d7109e0182c13853b5f15a0d67f9942294f73ee8c6e22692e14e2a1755
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:adb171142d660b1a848605728aca529de47b5679f9c87e6039ca6a542cf17f83
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:75fbb1287f4d7fe58675ec81e0d93a6a727f60b6523fa90c4bd3abc20ef2c74b
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:03d13fe1f1aa0ee5b9a283a05256727503c4daa3c20da1365d7ab78516a009b2
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:72817b62a55fb0f82f2908effc7bd3d20409fc60e9f228449d8f78eb390e22ac
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:baa41441752d6d739065eda587b92402e209c67fbcdacf0a40559d37c9e978eb
  name: kube-rbac-proxy
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:baa41441752d6d739065eda587b92402e209c67fbcdacf0a40559d37c9e978eb
  name: kube_rbac_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:cf52b301f1c37c1de925bcf7e16005b0a3a1865645db29fd671d47db592da1e7
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel9/redis-7@sha256:af174f3bc30f88c42b86add90d910cab79b1066d939b7faa99d85f5e8778e6d0
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5553a411b4da3d8758f8fab6b51cbe279e70fad84c0d7c6be3baa7cbea9e1584
name: openshift-gitops-operator.v1.2.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.2.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\":
        \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\":
        {\n      \"controller\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"1024Mi\"\n          }\n        }                \n      },\n      \"dex\":
        {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"ha\": {\n        \"enabled\":
        false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"redis\": {\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     },\n      \"repo\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"1000m\",\n            \"memory\": \"512Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"256Mi\"\n          }\n        }                \n      },\n      \"server\":
        {\n        \"route\": {\n          \"enabled\": true\n        },\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     }\n    }\n  }\n]"
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fe8b439315d37bc23bf8ce690af62f2de29265d8972be4a8f13817d369ffdb4
      createdAt: "2021-07-15T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.0.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:a69eee0ad853bb7612b3283abb0398dac2e24ccce21a268d05994c8931b56069
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:3e6521a3610b23dce99f4eb643171ac9172808e86f3ca4154f5d548a286bb95f
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5553a411b4da3d8758f8fab6b51cbe279e70fad84c0d7c6be3baa7cbea9e1584
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fe8b439315d37bc23bf8ce690af62f2de29265d8972be4a8f13817d369ffdb4
  name: gitops-rhel8-operator-2fe8b439315d37bc23bf8ce690af62f2de29265d8972be4a8f13817d369ffdb4-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fe8b439315d37bc23bf8ce690af62f2de29265d8972be4a8f13817d369ffdb4
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f20361afc1dd3553c1f03a40b78d595101b8ab5d524610f64c13c05d2f61c562
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:ac383b4c3556bb816142422507d6ae4699c1ecbbf5d9a7cef15cdac3f0d038d4
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:870c3c45bb0e248d2517882c91cbd2281af071841a1eb62041b6774812a2357c
name: openshift-gitops-operator.v1.2.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.2.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\":
        \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\":
        {\n      \"controller\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"1024Mi\"\n          }\n        }                \n      },\n      \"dex\":
        {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"ha\": {\n        \"enabled\":
        false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"redis\": {\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     },\n      \"repo\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"256Mi\"\n          }\n        }                \n      },\n      \"server\":
        {\n        \"route\": {\n          \"enabled\": true\n        },\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     }\n    }\n  }\n]"
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f9720587f4ad74f5c3f1ae002873a6c57c28822ff1860a79a03e03bbfb2711a
      createdAt: "2021-07-15T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.0.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:c0aa0bbdc0aee06a0197d96b017c5cf88fcdc1db7131ccaf99553fe4e5ac8b15
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:8e416d21654c7d02599aa7ce448c9de2028c770933c53c461a5d0359e48a6aaa
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:870c3c45bb0e248d2517882c91cbd2281af071841a1eb62041b6774812a2357c
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f9720587f4ad74f5c3f1ae002873a6c57c28822ff1860a79a03e03bbfb2711a
  name: gitops-rhel8-operator-3f9720587f4ad74f5c3f1ae002873a6c57c28822ff1860a79a03e03bbfb2711a-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f9720587f4ad74f5c3f1ae002873a6c57c28822ff1860a79a03e03bbfb2711a
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:548488ee061423ca160ebf7f9a4063072e0f89803aa14baa5652f16ddc1eb220
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:2a2838ae4138a9b2329611488e70b28672deea6322ce8dfd45f8cf693e649b47
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d9db3e25b20c2a28ba1a26ce466b1d7f0bb7b34e354c75029ef7a6ee21b3b580
name: openshift-gitops-operator.v1.2.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.2.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\":
        \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\":
        {\n      \"controller\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"1024Mi\"\n          }\n        }                \n      },\n      \"dex\":
        {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"ha\": {\n        \"enabled\":
        false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"redis\": {\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     },\n      \"repo\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"256Mi\"\n          }\n        }                \n      },\n      \"server\":
        {\n        \"route\": {\n          \"enabled\": true\n        },\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     }\n    }\n  }\n]"
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:148814a2f24377de364ccb390d7547a7bd447fab05400982a708405f992ab059
      createdAt: "2021-07-15T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.2.1
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.0.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:13462f05a85f3123944c7caedca39c659114dadf0df8b7d962a93a796976955f
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:e3b7d167867aa868ccc4f3d4e0d159c640caf434d750c4ed32ef74dcfbf97dad
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d9db3e25b20c2a28ba1a26ce466b1d7f0bb7b34e354c75029ef7a6ee21b3b580
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:148814a2f24377de364ccb390d7547a7bd447fab05400982a708405f992ab059
  name: gitops-rhel8-operator-148814a2f24377de364ccb390d7547a7bd447fab05400982a708405f992ab059-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:148814a2f24377de364ccb390d7547a7bd447fab05400982a708405f992ab059
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8fff10330ae0d0cc5dccfce66a3ab640b9545b358f72ef64b1ff4032835872b5
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:2b0a1ebdfbcd7e4efc76d4461b0c0e20950f8212f54a7dc08d3360f1e05c623c
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:57c0b68364294a996bd7faae39c302cb0e127737a33352af0c7841bd4768fe0b
name: openshift-gitops-operator.v1.2.3
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.2.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\":
        \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\":
        {\n      \"controller\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"1024Mi\"\n          }\n        }                \n      },\n      \"dex\":
        {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"ha\": {\n        \"enabled\":
        false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"redis\": {\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     },\n      \"repo\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"256Mi\"\n          }\n        }                \n      },\n      \"server\":
        {\n        \"route\": {\n          \"enabled\": true\n        },\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     }\n    }\n  }\n]"
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:419fa9db8295934301c53d226137d58288b7ba1cf49ebd703e347dd387aca36a
      createdAt: "2021-07-15T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.2.2
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.0.5-p3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:072dcd43970792b83641465b5bd1eadb5d19a54c10e781141bcfb9a53a8923d5
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:13788e65a67b18b2bfc8544dd0b5242391e5e3cfaac58a09fe539e415d0dfef8
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:57c0b68364294a996bd7faae39c302cb0e127737a33352af0c7841bd4768fe0b
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:419fa9db8295934301c53d226137d58288b7ba1cf49ebd703e347dd387aca36a
  name: gitops-rhel8-operator-419fa9db8295934301c53d226137d58288b7ba1cf49ebd703e347dd387aca36a-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:419fa9db8295934301c53d226137d58288b7ba1cf49ebd703e347dd387aca36a
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c206046e4eca8a091c40f28cb6b45c6f56ffffe8b2d30a4a555fe31bfe2bbeaf
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:7028e5f3c5110553dcc01bfae2b3f5fd88686b180906b2b3fa329accda0b278e
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5e17a539fb47cc9b5aed8e750d59f70f27380e74cdcd6d35e5c3f27f8795cb64
name: openshift-gitops-operator.v1.2.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.2.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\":
        \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\":
        {\n      \"controller\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"1024Mi\"\n          }\n        }                \n      },\n      \"dex\":
        {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"ha\": {\n        \"enabled\":
        false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\":
        \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\":
        {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n
        \       }                \n      },\n      \"redis\": {\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     },\n      \"repo\": {\n        \"resources\": {\n          \"limits\":
        {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n
        \         \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\":
        \"256Mi\"\n          }\n        }                \n      },\n      \"server\":
        {\n        \"route\": {\n          \"enabled\": true\n        },\n        \"resources\":
        {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\":
        \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n
        \           \"memory\": \"128Mi\"\n          }\n        }                \n
        \     }\n    }\n  }\n]"
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:513bc586e1c177ce2f89eb7eb7a8e2db9e7a79eb80775709b5ff6c0527a6beca
      createdAt: "2021-07-15T19:44:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.2.3
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: GitOpsService configures a web service for rendering the GitOps
          UI on OpenShift
        displayName: GitOps Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1beta1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1beta1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.0.5-p3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:a11598bb3f07959430ab159f3caf165715284f391723bb9c6b15170bdaf8076b
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f069472b7d25aa8a1beb4bbc0369e759cb9581ddd74fc03a93c208b6b6936450
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5e17a539fb47cc9b5aed8e750d59f70f27380e74cdcd6d35e5c3f27f8795cb64
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:513bc586e1c177ce2f89eb7eb7a8e2db9e7a79eb80775709b5ff6c0527a6beca
  name: gitops-rhel8-operator-513bc586e1c177ce2f89eb7eb7a8e2db9e7a79eb80775709b5ff6c0527a6beca-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:513bc586e1c177ce2f89eb7eb7a8e2db9e7a79eb80775709b5ff6c0527a6beca
  name: gitops-operator
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:63619417a1a9bd91d3ac7adc05b3b6aee84bcc9059efe7670dc4161ba6766fb1
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:3b99f4ad7f1bb463f567ebb8f512ac5eb224658140da5ab1e2e8a5b05f4409d1
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2366162e7405209f8a816119cf05c4b8b9815706555696fad562997d5fd33725
name: openshift-gitops-operator.v1.3.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4435f0d0085f0ea6a5e45246d740da4efc7a231d2c8b814cc0034bc02d6d9814
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.2\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:36984033c70240cb7d817dc4a8db24a7dd45611814eed41d6433e389523cb753
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:6a90ca3d902d63617b14f25fd08720be7d89ad6af8e105a4b190673bfafc7bd4
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4198486aff0a0f2e724e2307ea84e867e29c8547e53a302140bbe65d67537cea
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2366162e7405209f8a816119cf05c4b8b9815706555696fad562997d5fd33725
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4435f0d0085f0ea6a5e45246d740da4efc7a231d2c8b814cc0034bc02d6d9814
  name: gitops-rhel8-operator-4435f0d0085f0ea6a5e45246d740da4efc7a231d2c8b814cc0034bc02d6d9814-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4435f0d0085f0ea6a5e45246d740da4efc7a231d2c8b814cc0034bc02d6d9814
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f54a000878cf5c7dd79a76b4966b61c629540ebc4c5cd740d6c6e28b62264957
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:aaacd275f03aaf9eb4d07b554852bc7a7c35889b2d7799e14b5f7c0b4c06513d
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:90bf8776827973431bec21f425d1943e76639d932a19eb39625e052904db5a56
name: openshift-gitops-operator.v1.3.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8bbdb548811028c23e054a4786b41ab3bf73eb8873bdbfcf7742ba845d347227
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.2\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:5df5c9106eed660e610e5847369b47ac183aaaeeee82fa28e1e015f7b1c77a11
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:b9fe428d18852787e6c5fc37f1edd32d4de793f0e544f0525e5d16bd7628a739
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:64881ab69071cf818f6b8d14846c59903feffcc5344d5cea83f999ce41ab0762
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:90bf8776827973431bec21f425d1943e76639d932a19eb39625e052904db5a56
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8bbdb548811028c23e054a4786b41ab3bf73eb8873bdbfcf7742ba845d347227
  name: gitops-rhel8-operator-8bbdb548811028c23e054a4786b41ab3bf73eb8873bdbfcf7742ba845d347227-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8bbdb548811028c23e054a4786b41ab3bf73eb8873bdbfcf7742ba845d347227
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:548883b87e918348a8beb0fc9310e1174ad8e0f9d404df769243b089000e876e
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:8134ab3635829b1f45838c3f435f6ca4b2e219455298686508dc7ef9395ec665
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:6cf4377fd2efa8ae4965dae8e6cc7cd7017fd739e43618d6daea61244fe40d47
name: openshift-gitops-operator.v1.3.10
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.10
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0c366869ef2acc5ded36d7b00b33cbf6714df2b55838a2a7257311efc76dcefe
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.15\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:93aa2ce8f2a3a549b18a647829a32eefe59c74fae70be62708ce62d348c8b50f
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:4e700c53ee89c6eec33f94fe52583408971c23fcc618ccd359e376d959b13fd7
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:0265edf2c8f976362ff05e3164abab479233c02854da18c03aeb4e672f3e5c79
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:6cf4377fd2efa8ae4965dae8e6cc7cd7017fd739e43618d6daea61244fe40d47
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0c366869ef2acc5ded36d7b00b33cbf6714df2b55838a2a7257311efc76dcefe
  name: gitops-rhel8-operator-0c366869ef2acc5ded36d7b00b33cbf6714df2b55838a2a7257311efc76dcefe-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0c366869ef2acc5ded36d7b00b33cbf6714df2b55838a2a7257311efc76dcefe
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:d1a86ab8c6310e0fbf40c62ac5f96a964f7da3ac2672da40844d96e85515fe73
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c88c6f7ec3cc7cc08b8c5e581cd245e4d5a6107d03d1f07676eaa9a2addd214d
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:93a1cbe44b5009f700e85e2f5a88de0fc3d4f7a3fe30240456899ea5e097ac5b
name: openshift-gitops-operator.v1.3.11
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.11
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:565a84305a6408de51363085efa8499f2402d5a8324fb1fec009f5d230d25466
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:09205347de0a01bdd7c3e70c86e7a0cf60572a5723d47b9772e518dcd202632c
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:3f28c4a4d35354d9ebf91327149bd15a7a6402d959803c4b5b0e53dbc18f5874
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:cd0275c6ad8575e9f1262d5aa5a1cf6a0f199bc7869d6463d19b887027f1ffea
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:93a1cbe44b5009f700e85e2f5a88de0fc3d4f7a3fe30240456899ea5e097ac5b
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:565a84305a6408de51363085efa8499f2402d5a8324fb1fec009f5d230d25466
  name: gitops-rhel8-operator-565a84305a6408de51363085efa8499f2402d5a8324fb1fec009f5d230d25466-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:565a84305a6408de51363085efa8499f2402d5a8324fb1fec009f5d230d25466
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:02eac8b3e96deabebeca842ce9057b1c899a3366ac1e12d9624663b6257b4784
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:b696fa0fed3fe2204769ccae59a7b36d6044b102d382f51f312ddd317c136d15
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d6406b5132eb96d3f8ff535cc88eb0c6d5c57baca7c345084848d0201b706aa2
name: openshift-gitops-operator.v1.3.12
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.12
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f60619064643f5aaba87e6008b82b18cfe53de8a727399eeee9406b6816a1974
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:f77de6c8097eaf1e8f04e1ca3cf2c359919573ec187c7eb7e742767256130293
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:aa01746421de9f1f992e490f94e7f3df8133bddd1adfa8381bd00bae4864ebc4
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:e0bb49e3567c64e767ddce22450b63b758eb887c7d461b092dd78f78e44b4741
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d6406b5132eb96d3f8ff535cc88eb0c6d5c57baca7c345084848d0201b706aa2
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f60619064643f5aaba87e6008b82b18cfe53de8a727399eeee9406b6816a1974
  name: gitops-rhel8-operator-f60619064643f5aaba87e6008b82b18cfe53de8a727399eeee9406b6816a1974-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f60619064643f5aaba87e6008b82b18cfe53de8a727399eeee9406b6816a1974
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:af6a263dae9da4d7a5b17e6ef6497acc92c74d7fff2a23d31bf4b509271e9f99
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:5f70e8b5acf42662a50405c4063ca9e5be52bf2a15837763130c2ca2ecc24565
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d59bacd666db02bd85a265f71188aca9327b53d58090a4d1490e02cd657c5e52
name: openshift-gitops-operator.v1.3.13
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.13
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:95507997601dbb5d879edfe78075392b03c64e6ff1d82b1b252326b0d6d8c94a
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:ea758da9c687165d1072d5997e7a9d77a23fd326fa7e185811dba624a28e3d85
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:97cd86e97450116ddb912835f9ecbe20d409ceba092367a19b0fc7534af1791f
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:f05f3b00025dbf4779a22546ce2eb2a39e5e50241169bcef1f3be9a9da278535
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d59bacd666db02bd85a265f71188aca9327b53d58090a4d1490e02cd657c5e52
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:95507997601dbb5d879edfe78075392b03c64e6ff1d82b1b252326b0d6d8c94a
  name: gitops-rhel8-operator-95507997601dbb5d879edfe78075392b03c64e6ff1d82b1b252326b0d6d8c94a-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:95507997601dbb5d879edfe78075392b03c64e6ff1d82b1b252326b0d6d8c94a
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:475420c833ed59dade39632b57d3604b0b543752bcbef0b6f81b1a853c1067d3
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:93f6721e53076225cb5c16b1e2005c500b68daadf3b4e80cddf20e43512b2def
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:66053b5c2498b20fe7ed47fc8455e0ebf464fa58896a2cbeb52cf512b2effc1c
name: openshift-gitops-operator.v1.3.14
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.14
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3a37d4ceda295e731e53657920960c51bc21d1436c2257e09ac42fe56d96d1d6
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:93e304bf3af04c9fbe9be9ae7e7295f1c21b5fab1620a9790e8771caf03dcd1e
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:7b12655aba4fda3ff4668c433fd529801ae0d2289b1ded9e5bddf1189aa8a371
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:e59f7c1e544ea529385fc991b9644bf3038076534655356c29fc5d9cfb68137c
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:66053b5c2498b20fe7ed47fc8455e0ebf464fa58896a2cbeb52cf512b2effc1c
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3a37d4ceda295e731e53657920960c51bc21d1436c2257e09ac42fe56d96d1d6
  name: gitops-rhel8-operator-3a37d4ceda295e731e53657920960c51bc21d1436c2257e09ac42fe56d96d1d6-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3a37d4ceda295e731e53657920960c51bc21d1436c2257e09ac42fe56d96d1d6
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:882b0d337009ca652546d0ebfd8b25e8204d708a4497e86d27573b64efa55942
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:8894c8eda4efdbaac29756d6ee328d0cbc1af45b1b1f5920532c1b443b05071d
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:4e441ee14fa8ddd9a110f5490af0fbea9b58ab4fbdc0f207413eb5d766179285
name: openshift-gitops-operator.v1.3.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:67cd9f0b3c969fda1a62a732be1f7ca356c32c4d4913eefe689674408cabbb8c
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.8\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:a52bf8eee096555c8ffe33f8c86fd4db5095180c96a6b3b9e95438fd2e842f31
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:876358be7dd8d6858a40f23b314d408685b6e92dfad4d6183b592e8f2612d630
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:503312ec073e41ea95f2173582ad41a2eed7ec332dc4611d435f2367c7a102f1
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:4e441ee14fa8ddd9a110f5490af0fbea9b58ab4fbdc0f207413eb5d766179285
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:67cd9f0b3c969fda1a62a732be1f7ca356c32c4d4913eefe689674408cabbb8c
  name: gitops-rhel8-operator-67cd9f0b3c969fda1a62a732be1f7ca356c32c4d4913eefe689674408cabbb8c-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:67cd9f0b3c969fda1a62a732be1f7ca356c32c4d4913eefe689674408cabbb8c
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8e9335fd118cfc1e75bdb41a74bf8569d068897e5d71ce2301b55207936a9941
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:0b32d1a92445901589c8bbd7863ca3c11b425167a8c20c0bb2a3e65f9ab4e477
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:636a040e83d025996d133fc6f90a625aed2d8bb81db45c23bb8e11d6d5571993
name: openshift-gitops-operator.v1.3.3
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:adb899bf6e206260178abc05020d98fcadd07e026920c739df1b63156762e85a
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:1fff646753ccf38309c3c82c48ad656ef0198d644fa92ab6d40a77f9b1800cef
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:9d7f629c138225a206395eadca838ec92946556e3b330f6f9fd41aed66563165
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:f2772b06d349c81b0dc168bb5664db0a8cdb74eddaa5023e642289edd432e7bf
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:636a040e83d025996d133fc6f90a625aed2d8bb81db45c23bb8e11d6d5571993
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:adb899bf6e206260178abc05020d98fcadd07e026920c739df1b63156762e85a
  name: gitops-rhel8-operator-adb899bf6e206260178abc05020d98fcadd07e026920c739df1b63156762e85a-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:adb899bf6e206260178abc05020d98fcadd07e026920c739df1b63156762e85a
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:cd8caa2ba98353b6488468c954698fd0d6c006042b10e6752772edb4b10745f6
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:24d874de138484dfbb56ae7f9e195f939408a0ded76c3dc76ce7f341d5a1d5f5
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1d18cfdb839ff44dff1e2fdc9da4008c91ce25758328f200b9e282bfd8c7c08e
name: openshift-gitops-operator.v1.3.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73e6a8dad2c99bad403309449c554681261fb0939c7b348a0181cc12d08ba952
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.3.2
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:9fb417ed268ab8fa64575f0c881c61f06dc02333e36c1de69d2ed6aa912b719c
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:2a9cb491e1a84f3e8b4a93d08ae7c3eaff276ea05fed1141f8f159d311d5f56b
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ef73b436d846b48bf7637d963087a45836e5097fa373f3bc4b882a4db28d3ec1
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1d18cfdb839ff44dff1e2fdc9da4008c91ce25758328f200b9e282bfd8c7c08e
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73e6a8dad2c99bad403309449c554681261fb0939c7b348a0181cc12d08ba952
  name: gitops-rhel8-operator-73e6a8dad2c99bad403309449c554681261fb0939c7b348a0181cc12d08ba952-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73e6a8dad2c99bad403309449c554681261fb0939c7b348a0181cc12d08ba952
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f29527660b789eac4d1e877dedd3582e8e2b65c81ac3c37830557e434554e3b8
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:a06be2cb215f19f2e149c4a8f280f8b58e9af2dc59db53a350ad69819497c980
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:98d5cfa73f1fa925cf9581613427a34f9077103189ae5125a62b7213ff92c16f
name: openshift-gitops-operator.v1.3.5
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.5
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:db0d0e652666443dc6caf3abf308c5483fdb9850830158a978bffda2ec7fcaf3
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.13\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:66644f0a016c4a47d396395e65e03ad00b4a7b9588ee563613548c8f9528501f
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:c933aa990bbc738f77b69ed58f63e70dd6f1b2c13ca05a2c9b89cdf12008aeed
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:1ae335936a0e1310bbf338e576259466b142b07b41682a0a1319621562d54dfb
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:98d5cfa73f1fa925cf9581613427a34f9077103189ae5125a62b7213ff92c16f
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:db0d0e652666443dc6caf3abf308c5483fdb9850830158a978bffda2ec7fcaf3
  name: gitops-rhel8-operator-db0d0e652666443dc6caf3abf308c5483fdb9850830158a978bffda2ec7fcaf3-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:db0d0e652666443dc6caf3abf308c5483fdb9850830158a978bffda2ec7fcaf3
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:ac4e8f350e50a503af3bc201a7182e6a30e5bf1d93eeca7ca2f92e255ea54cc0
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:9b5e6d11c60c2d66534081dd7f2e557374614c906a21b706ee327e1af1584082
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:298334efb11a7ae3bbefa376070e13c8a295fbb302eb9ccdcebfc67739257c26
name: openshift-gitops-operator.v1.3.6
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:019e9a0ee07ce510330970c592a262198a91b6da57e16894c7bdc7f72629854b
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.3.4
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.13\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:c7266324ddf398cabde998aa8eb09b7ab498f1f4b997b1023e8e68d0c01f1916
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:091bb47f112c2b71ae82c539ef79c596029293d6a83a597e729d55819b0ec6fc
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:40d1f961cc33936ad879e6314b51a1e9906b756c08d1321c3e53008af2e0a514
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:298334efb11a7ae3bbefa376070e13c8a295fbb302eb9ccdcebfc67739257c26
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:019e9a0ee07ce510330970c592a262198a91b6da57e16894c7bdc7f72629854b
  name: gitops-rhel8-operator-019e9a0ee07ce510330970c592a262198a91b6da57e16894c7bdc7f72629854b-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:019e9a0ee07ce510330970c592a262198a91b6da57e16894c7bdc7f72629854b
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:dd96f952ecc1287d5ab0d20b33f160550b9368a40d468fe2b8a31222de963112
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:87ee39c8d24206828352d1bc6625c0354fe80be50476008cc4b1a317a846538d
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:715bf8744ad01e1eb0edae405b746a318ff3e33ec76d3117d1cb2105cf2f5c63
name: openshift-gitops-operator.v1.3.7
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.7
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f15894f54c9430de0eb353f2c5b7289b137bf05b92cafccaf080c5061b5ea396
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.3.7'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.13\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:c7430747553ba35fe2d9204d2d5a73076cf77c0765ac64aec7074d1c4a8d1b66
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:44e95e15eab26a21c2361d70c024ea82646f60687c75f09eaf479c6ca565d8e9
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:88e98f8f0c2bfa832279a995eebaeeaa4fdc37a7f6f1cd2af70440df980618e9
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:715bf8744ad01e1eb0edae405b746a318ff3e33ec76d3117d1cb2105cf2f5c63
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f15894f54c9430de0eb353f2c5b7289b137bf05b92cafccaf080c5061b5ea396
  name: gitops-rhel8-operator-f15894f54c9430de0eb353f2c5b7289b137bf05b92cafccaf080c5061b5ea396-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f15894f54c9430de0eb353f2c5b7289b137bf05b92cafccaf080c5061b5ea396
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:d303f94d6913243bbaa9b98758e35767dbfd5efa20943af5270cae2e81baeeac
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e81591575a1f6a3110eadcabfe827efe8ef15bf344fb4a0504c4762624709314
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:bbf1d5c4427d2cd2f072ac5217de77f62924395797f07cbef5a400ac318210ae
name: openshift-gitops-operator.v1.3.8
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.8
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a1951e77d23f66f9680882f28e9c6375a6cc6c43c476024dba119cf5664fe2d3
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.3.8'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.13\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:af0203b7b2e6b242fc8d71aade1c563301dc9d308a29cf80b5d01264f5207f8d
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:b1ce8b6569818496746135ef2d6b9dc263b164b6647e48eebd7f1b11a4dda846
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:71ad1dd22dd797870b7b7c061bede0e9cfe611dbfbe4452fc30a3f4af9a81dce
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:bbf1d5c4427d2cd2f072ac5217de77f62924395797f07cbef5a400ac318210ae
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a1951e77d23f66f9680882f28e9c6375a6cc6c43c476024dba119cf5664fe2d3
  name: gitops-rhel8-operator-a1951e77d23f66f9680882f28e9c6375a6cc6c43c476024dba119cf5664fe2d3-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a1951e77d23f66f9680882f28e9c6375a6cc6c43c476024dba119cf5664fe2d3
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:ab68cac8e278987343af96ffefb02b11f9c160768c739ca8747ffe53fee1eee4
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:b132875d0658fc872cbfdbfe1aa7d3d7231f978c6522e38a2fd721f35b1be568
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:cf03b9810510a741c56c55f085832de2f8dd324cb21fb27f5085dbbc2e350f4c
name: openshift-gitops-operator.v1.3.9
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.3.9
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c7c0b01344db31bcb4fa73a502c610d7b7ab39cc2c40bfc38251393dd2c679fe
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.1.15\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:fe7bf6b9c3c45964d408550d9e951245cd12151fe2dbee206acf920752159e69
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:161e19f197af13d53f257e9e47b428f746b2ffbcdb41fb3524a0c8d618c7f61d
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:9e69d8395c82adec8ef60fb78a6d2bc5ec09da57d4d9a19f4548e914f41cfac2
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:cf03b9810510a741c56c55f085832de2f8dd324cb21fb27f5085dbbc2e350f4c
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c7c0b01344db31bcb4fa73a502c610d7b7ab39cc2c40bfc38251393dd2c679fe
  name: gitops-rhel8-operator-c7c0b01344db31bcb4fa73a502c610d7b7ab39cc2c40bfc38251393dd2c679fe-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c7c0b01344db31bcb4fa73a502c610d7b7ab39cc2c40bfc38251393dd2c679fe
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8a48d6191ed13b46253f5bf5728eec0d51e9bab6bfc0d5d69c52bf966df862c1
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:943a0e3dd90d08f5f1c1c014e37e4257df0f82d41249253c9d324500e3af7242
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5d7dc48c29239a5675ead26016aa129f00a84d29daa094906fe864a637e4a9ec
name: openshift-gitops-operator.v1.4.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a901c0d1c562ab84b4d6c0a210f438e29045b3a70857c0aee050d17dd6873ba6
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.2\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:69fe929483b47930ec80d46cfba0451eecf0f7f070a1aecbd5390693a4af6b37
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:2ada03ddde19a39519987cea928d6a0456711a0c906cb7fc3a1e9f0b3c7cfb12
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:e2ab8b88fc8f88f3160e5877e2f93082ee1896d6103f1c6263d9b747658e6706
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5d7dc48c29239a5675ead26016aa129f00a84d29daa094906fe864a637e4a9ec
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a901c0d1c562ab84b4d6c0a210f438e29045b3a70857c0aee050d17dd6873ba6
  name: gitops-rhel8-operator-a901c0d1c562ab84b4d6c0a210f438e29045b3a70857c0aee050d17dd6873ba6-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a901c0d1c562ab84b4d6c0a210f438e29045b3a70857c0aee050d17dd6873ba6
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:6fedab7d3c0f1dd66ef7dbd624edd6de8581b144f214ef1676bf6a2bc2e05948
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:50d5fb22542b35adcc8a35efe6e2b14f2c00aff430e0a8f802ce66facb2d4532
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:669e46bdd984fc7e4d34381886b9a032ad6258c9fc5becb7cd63f14883cb4d39
name: openshift-gitops-operator.v1.4.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Basic Install
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:307b92c271344f9f614f5e8fcec3ac70b6bf9bde479ffc0e81cf92043a2ba2c2
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.2\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:d502ea982acd7c4d3627c385a882965f5e0d465e32b54ec0723efc9d36592d9f
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f28bec6ae1ceb087012ccb73a7c6e1878a11283196a955d0fddbd41acb6492b5
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:a2e8e711efcd81bf674988c5ddf00cf58ea4d066a2e4b4f50a84f3c9b533da87
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:669e46bdd984fc7e4d34381886b9a032ad6258c9fc5becb7cd63f14883cb4d39
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:307b92c271344f9f614f5e8fcec3ac70b6bf9bde479ffc0e81cf92043a2ba2c2
  name: gitops-rhel8-operator-307b92c271344f9f614f5e8fcec3ac70b6bf9bde479ffc0e81cf92043a2ba2c2-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:307b92c271344f9f614f5e8fcec3ac70b6bf9bde479ffc0e81cf92043a2ba2c2
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:14ff83b64253c88411ac916e223ed69c59cacee49b0de49ac999c4ac33c0fdde
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:881f4c0e29c6cfaadb9ecebd31148029eb8be961c2afca36b177338bd54377b2
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:97e5a457e3c1f7d6f815e215fe044fed33c24325d7244f37b6eb93fda941fc6c
name: openshift-gitops-operator.v1.4.10
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.10
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8e47b87419f5b6499b4ae696614faf06d109f052aadcb59e3582aeeb6609567e
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:3be297272fc8d486286b85f8e9e183b7e419c2e01cb1fad0c84f06404c03f491
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:08ed375fe9c8b02ad64232e8059d8cb0c0f4be6b83027b84aae4355375d6efda
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:169d3208ba2ca01440ea0425285bc05938cad15c532fb3c03d03776973445585
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:97e5a457e3c1f7d6f815e215fe044fed33c24325d7244f37b6eb93fda941fc6c
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8e47b87419f5b6499b4ae696614faf06d109f052aadcb59e3582aeeb6609567e
  name: gitops-rhel8-operator-8e47b87419f5b6499b4ae696614faf06d109f052aadcb59e3582aeeb6609567e-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8e47b87419f5b6499b4ae696614faf06d109f052aadcb59e3582aeeb6609567e
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:a3b9f4f7ad742ae6d7520e6cb1fe438344aa097b9da7bd9458a2445a0cc65558
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:0605ca30da08b8338ce22fe556f023f743918e283fea15e2cd1c18db75d8d4b2
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5e49743ef53f233b1012ac3523b79b9067b98ddf12fa34d7e75ccac19b0ce01b
name: openshift-gitops-operator.v1.4.11
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.11
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:950d02ebae4ac98ade80035c0380c5a91fb24f052cc34dd04d8151141fec2526
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:c25862813d07b6810f4ef834946b55a32cb495d1880c0184f30c980b993cbabb
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:d6889b997cca132f16c5750082b351f5f02816643b953bc736e38aa38c4b2eca
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:14643c63174200339832628bf625279dd2841c70c347160148d17b5def3110d6
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5e49743ef53f233b1012ac3523b79b9067b98ddf12fa34d7e75ccac19b0ce01b
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:950d02ebae4ac98ade80035c0380c5a91fb24f052cc34dd04d8151141fec2526
  name: gitops-rhel8-operator-950d02ebae4ac98ade80035c0380c5a91fb24f052cc34dd04d8151141fec2526-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:950d02ebae4ac98ade80035c0380c5a91fb24f052cc34dd04d8151141fec2526
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:cd11610267fd316c5bc2967869de0ec78654d66b53a808db2916e23893310d87
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:ede612c1df6463035443d508de09262db569928964650c1b0264dc430cf38217
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e8b1effbf82d4a5442ccb4abaabfaef8a8ca571236aa6df84278952e557b58dc
name: openshift-gitops-operator.v1.4.12-0.1664821688.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.12+0.1664821688.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:5fa11352f1fd82c4ac55b1c27bbfdc270731c61320952e9f9d3523d96b66f4d7
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.4.12
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:064b055af415348769a0d8d11139b81816a1b7711b718f6c5b9aa2afe5b14b31
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:964199111a166dd3f00d3fa6e49f41aeb1245a0b2627944f72a6a9bce2752819
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:642d1f6ea73d73e2d9ba320881922da88d379fa099a23b5eedb58fcb8db153a3
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e8b1effbf82d4a5442ccb4abaabfaef8a8ca571236aa6df84278952e557b58dc
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:5fa11352f1fd82c4ac55b1c27bbfdc270731c61320952e9f9d3523d96b66f4d7
  name: gitops-rhel8-operator-5fa11352f1fd82c4ac55b1c27bbfdc270731c61320952e9f9d3523d96b66f4d7-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:5fa11352f1fd82c4ac55b1c27bbfdc270731c61320952e9f9d3523d96b66f4d7
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:07db0f94deba2843f9e1091cec8854ea94bfe050bf7b12933fa4319202c92bc6
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:6b4014ef6cde603d6d015abb22643801e38be8c2b87358a35a7437b94b4deb4f
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:745bf654c280ed8e4da5970fe389be06699e4c2efbb61b714789e239c0a2018f
name: openshift-gitops-operator.v1.4.13
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.13
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ef3b41bb2b125b37164be80ce4601c99d55e56291b26496e026f6503a4447af1
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:8203cbcf5e86c703a4fa93c9e055849a0ea6b0a2ba9ce2207238f3b16090a158
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f5cfc4f82010cd40cd31b0a89f36b3fe2ee681dc05ef8280ac94a8a8874d373e
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:c5ac3a79bd316d99948efcb52ad7e774860a83a2b5fb498d41a51812d6a87437
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:745bf654c280ed8e4da5970fe389be06699e4c2efbb61b714789e239c0a2018f
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ef3b41bb2b125b37164be80ce4601c99d55e56291b26496e026f6503a4447af1
  name: gitops-rhel8-operator-ef3b41bb2b125b37164be80ce4601c99d55e56291b26496e026f6503a4447af1-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ef3b41bb2b125b37164be80ce4601c99d55e56291b26496e026f6503a4447af1
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:5af53b831a2ac2b0ca68fadd593579303df37543f8aab3a1c0a85830dbda68dc
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:53d1f14edac3b65d6677b0157d52a4341f11b08510912d84514e53ab63e2cc05
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ad293cc67f56184224dd0b22a6f7653d47ba2e18ce15fd6e510817ff6bd371ba
name: openshift-gitops-operator.v1.4.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:baeefcb0e089a58a47c18c6f138f85373e6ae36928a5d8492a08b2c4ee67d78b
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:cf007ae3731098557b4a59b972ace5a410961c83bc2657273fa1e6c8e484e0f2
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:c9bf3077c103dea9f4e63c37cd691f9498b90f1ffe73cb0140ec7a0b9940c1cc
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:f46790936bc01dfcb9deb0454a5e17fb41a38daa210715050ddb9cc24bc5044e
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ad293cc67f56184224dd0b22a6f7653d47ba2e18ce15fd6e510817ff6bd371ba
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:baeefcb0e089a58a47c18c6f138f85373e6ae36928a5d8492a08b2c4ee67d78b
  name: gitops-rhel8-operator-baeefcb0e089a58a47c18c6f138f85373e6ae36928a5d8492a08b2c4ee67d78b-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:baeefcb0e089a58a47c18c6f138f85373e6ae36928a5d8492a08b2c4ee67d78b
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:96cb1fa76cb4cfeeaf3f7214e188d7eca01ae0b5000a8f29b0221a5076fa5728
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:4f83bf3468eb11e18ede59c20506f2381a152a0dfbcbdfd3c3cfa538a2660781
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c79e7605725f65e2139e8b2b1397940355b725e0767ee69ede7ef936ee680bec
name: openshift-gitops-operator.v1.4.3
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0d56cc17576819236ec852c0bf5f13d404250a4e5a54dd2110e02af6d989e33b
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:ed79ac9f43f510765744a00a341afafebfd17503f3e7030b811e1786eeff61dc
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:e99e436fa76e09a11215ab8374a0f1ace34dee015dd9955a01d6fcfa3b02af34
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4df5a9721c1175053c4c81b9d7e5e2e14cbe366d1870f0f2f6642e6915251721
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c79e7605725f65e2139e8b2b1397940355b725e0767ee69ede7ef936ee680bec
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0d56cc17576819236ec852c0bf5f13d404250a4e5a54dd2110e02af6d989e33b
  name: gitops-rhel8-operator-0d56cc17576819236ec852c0bf5f13d404250a4e5a54dd2110e02af6d989e33b-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0d56cc17576819236ec852c0bf5f13d404250a4e5a54dd2110e02af6d989e33b
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8f2b14681e7d5046cc2d967804bac9df29d3bc2c151490c04d3829630603824f
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:6f4fb328996a571fcab5f0826289c4bc329fd150ad07ebf8c9213640c78449b4
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b745066a11639980442b4ed17067ba9463cf6bd8811e01941de22df8fee0ccac
name: openshift-gitops-operator.v1.4.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bd4f159b0606e47858026782a97fab2a392a2fb11414f7143b527e5ac4b7fd1d
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.8\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:5178ee3e2a1b94dc6fbe55405aa3be0170c835ebc4a972c9dbf1e57d8358ffb8
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:ff4ad30752cf0d321cd6c2c6fd4490b716607ea2960558347440f2f370a586a8
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:885143f788d8fb0ba8c9a44b4ee091b43cd0fb8adf0258972d40f39ce38d4e4c
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b745066a11639980442b4ed17067ba9463cf6bd8811e01941de22df8fee0ccac
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bd4f159b0606e47858026782a97fab2a392a2fb11414f7143b527e5ac4b7fd1d
  name: gitops-rhel8-operator-bd4f159b0606e47858026782a97fab2a392a2fb11414f7143b527e5ac4b7fd1d-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bd4f159b0606e47858026782a97fab2a392a2fb11414f7143b527e5ac4b7fd1d
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f28697295b0969d5ce3d9ff703db43bf6abae5a881033e88d422e61a431f064a
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:8d90b23b560e5a4b4020e65f29fc60b07ffbdbe60acf07801fd6b7b14af2d6ad
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1ce0dac58aba601357994b38f4bc6503053c9ca66c4a559529b79eabfb95750a
name: openshift-gitops-operator.v1.4.5
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.5
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:79bbfd4c6a7cb78d7be9209e5fe22ecdb51ce3c74c6de56be9d06b49ae20db7b
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.8\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:d6a64a6dd2fb4b715f499e0897147e3f0fb8f0518d7330b1d0ec4dc767814add
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:c260abbd932a7e9a5658c9283ac9a087c44e61b630fa883183950b0eedf7d3fa
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:e903f063c48cc058d9edfc809199d90414b5349b1c92816186c0b6636dcb2614
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1ce0dac58aba601357994b38f4bc6503053c9ca66c4a559529b79eabfb95750a
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:79bbfd4c6a7cb78d7be9209e5fe22ecdb51ce3c74c6de56be9d06b49ae20db7b
  name: gitops-rhel8-operator-79bbfd4c6a7cb78d7be9209e5fe22ecdb51ce3c74c6de56be9d06b49ae20db7b-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:79bbfd4c6a7cb78d7be9209e5fe22ecdb51ce3c74c6de56be9d06b49ae20db7b
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:bb9a95154994a94c82e0cedd601c9698f47f668629335f6f6297d898aec9e12c
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:ba450603949901a9ebd0463cdf5809f476c96a7abcfaa2e117fdb58d87313566
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:100959a714d24d8d333b4dd91ce038520a564b9f3bc955070d2f35007965af76
name: openshift-gitops-operator.v1.4.6
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b136813b3599891c4c4b1f559c5491ce0c32f098d36f4e8f0cd107dca53e5631
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.4.6'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.8\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:2ab205a527d0e86640d1e562a1943792fffefeb2c0f9dd3cb4112df51b8ccd53
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:e551da5471660398dc4e03104cbc90cc3fe59c7c965078daaf54d459100a984d
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:1ab1241c030501a2afebf7feecf45aa37c634b6a4febb9cebb4156c0a9868e40
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:100959a714d24d8d333b4dd91ce038520a564b9f3bc955070d2f35007965af76
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b136813b3599891c4c4b1f559c5491ce0c32f098d36f4e8f0cd107dca53e5631
  name: gitops-rhel8-operator-b136813b3599891c4c4b1f559c5491ce0c32f098d36f4e8f0cd107dca53e5631-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b136813b3599891c4c4b1f559c5491ce0c32f098d36f4e8f0cd107dca53e5631
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8f634b0dc808ba322fca0ddc74c238a9ae8eaffd5ee797ce322aab3f4dc88ee6
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:dc6793861f3c60670cb6335a03ea255b6e6e995505f91f0900c73cc011f2f77a
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:09bb7f98f120c9ceb5cdfc8b6b86f1b290be9c841bf6aa67c91bb3b05367b5b2
name: openshift-gitops-operator.v1.4.7
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.7
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d3c5a740798cb39b6792b5486c3466bff6423bc793a37365855aca4ace94289
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.4.7'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:99fd35643b5fec8fc84f96e9c1a6969956171c753fe5ac8896289043846d3e32
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:30736e74eb6cf0f79c62ea3b0f6f7ca66811c3c8966fc0389925dab3c23ee975
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:00e4768862f89d3577d5238534ea2e494c95517094556cee84545c5dc6c8b796
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:09bb7f98f120c9ceb5cdfc8b6b86f1b290be9c841bf6aa67c91bb3b05367b5b2
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d3c5a740798cb39b6792b5486c3466bff6423bc793a37365855aca4ace94289
  name: gitops-rhel8-operator-2d3c5a740798cb39b6792b5486c3466bff6423bc793a37365855aca4ace94289-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d3c5a740798cb39b6792b5486c3466bff6423bc793a37365855aca4ace94289
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:93b94571afdc43217312ab0068daac77d671103616643be7ee1e2504443b298b
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c81c9f8fa9cc5d2440a9ff812db145f6fbf1bf4d4110fc05447c8552e97ea871
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:41f3e23c3fb5ba5e66950b0736d2332e1fdd3612b3ecc10cd301e78316bdcd80
name: openshift-gitops-operator.v1.4.8
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.8
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:17330322d351a91b314b326a54ad464225a5336cb386b0b52868f9255bb3da2b
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.4.8'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:aec29900aec848b05998f4a2df8ac777199775ba4b4f9e4d0586384cc39879de
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:6773d2d55c131ea9b9a7b4ebe10e774262870c9287f231bfa811f0db34a76473
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4cfe39f10fcee0134e427d5bac195665413c2fc8542636466e7b79e5daf6222e
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:41f3e23c3fb5ba5e66950b0736d2332e1fdd3612b3ecc10cd301e78316bdcd80
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:17330322d351a91b314b326a54ad464225a5336cb386b0b52868f9255bb3da2b
  name: gitops-rhel8-operator-17330322d351a91b314b326a54ad464225a5336cb386b0b52868f9255bb3da2b-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:17330322d351a91b314b326a54ad464225a5336cb386b0b52868f9255bb3da2b
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:cda2d41998440370a8e6a8c83712aa7415edd72e134f959f94d92c0fcd164527
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:afc8f0d65d42d6b57e062fd578655c8ede0629f54f941dc4a1152dd482fd743b
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d20149f6061e14edf0214ef2da7018eeb8c90b53d04ce3951429391391e59556
name: openshift-gitops-operator.v1.4.9
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.4.9
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:270e3930874792638948f216577edd841af55e5293e7453cd5ce8f01b6502c91
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.2.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:956ae96faa4f4ce146c725eb76d1a8fa7f996d6b594cee7803e23bff573ee2bb
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:cd0f062db746577b1d48fb056f491546a4eace62c691e8e5fb8887c83b3f48f0
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4fd854c38ef65bcba7381a79ea104c2693455e686602c6c411bb9a14f817dc8c
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d20149f6061e14edf0214ef2da7018eeb8c90b53d04ce3951429391391e59556
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:270e3930874792638948f216577edd841af55e5293e7453cd5ce8f01b6502c91
  name: gitops-rhel8-operator-270e3930874792638948f216577edd841af55e5293e7453cd5ce8f01b6502c91-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:270e3930874792638948f216577edd841af55e5293e7453cd5ce8f01b6502c91
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:85cb5b94947221cc74c26f6ba644a89d371c47cd4efadac1f33d3a419dbb4fcf
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e676af24eaf61359738b139a9c835fad1c60acc3172e53f180896d582120e20d
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso74-openshift-rhel8@sha256:39d752173fc97c29373cd44477b48bcb078531def0a897ee81a60e8d1d0212cc
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:8b672faafd06809eead59badf0fb99e8cb7997eeb4112374d1057eb5c25712f0
name: openshift-gitops-operator.v1.5.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0ced6fd509573e9cc874f66b7a1d0529a82f178c46383648fa06bcb1d3d72e1e
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.5.0'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:0331cefa8b37da897b42f7aff93d2ad1eb72e9c749cd8514467298530b6d4b26
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:9f9aec8611ebb18a6e7b659f47e1e1cfafe4ccd60b5486c2634b296bd9d8345a
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:9805a45457d4c9348e0b1fabc3af5f82587411e74e3e705cf58a591721445e4f
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:8b672faafd06809eead59badf0fb99e8cb7997eeb4112374d1057eb5c25712f0
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0ced6fd509573e9cc874f66b7a1d0529a82f178c46383648fa06bcb1d3d72e1e
  name: gitops-rhel8-operator-0ced6fd509573e9cc874f66b7a1d0529a82f178c46383648fa06bcb1d3d72e1e-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0ced6fd509573e9cc874f66b7a1d0529a82f178c46383648fa06bcb1d3d72e1e
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f436e39892289e64da3bc13e7b0c0197f6c16884df066061008815c6e6080aa8
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:f8d7e65465dfc42798fa2cbc61081ea8b19b32b0dd1e1dcc15aa1e6910f68e89
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2420c7de9ade63c11b453730568a64772ca3ec1551b9b5e9ae8bfa2eef2b3cd9
name: openshift-gitops-operator.v1.5.1
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d886206a161ab51096f9d633056d700b94be453e25b51c249f91fd9a5ad2eb15
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.5.1'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.4\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:99c23b93f86c2f680f30116d14c6c6ce214cbd0d70b4b6a3b35242a0a561d2dd
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:3d1d9c4c8d837c85b72bf2cc6a6c4451a1197e3fe4a0ee3d1bb89760da1dba56
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:9ca90b963c3fd7e23b749565474fb7e7119e1bc42306119d36728663ccacb089
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2420c7de9ade63c11b453730568a64772ca3ec1551b9b5e9ae8bfa2eef2b3cd9
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d886206a161ab51096f9d633056d700b94be453e25b51c249f91fd9a5ad2eb15
  name: gitops-rhel8-operator-d886206a161ab51096f9d633056d700b94be453e25b51c249f91fd9a5ad2eb15-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d886206a161ab51096f9d633056d700b94be453e25b51c249f91fd9a5ad2eb15
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:254e8f232cafc70aae284ccb2d49b287494fc38a760de2c41c98855fd7d15034
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:388c0067de77d03ee0f48d7a6e530a5a323041d2680067c923cf8dd3c9eb7146
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:4760018938bf0f42306f6b38e88914e5bba0cd04722bea589978f6f7066d77af
name: openshift-gitops-operator.v1.5.10
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.10
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:be2925413106e99b203defa00ce97a7895c05ae57794263a0e0dff51e572601b
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.17\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:858a4875719190bb12dbacfa77aeae288ffe2a731ef7e81216d5f8f0fe36a473
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:d7f7079e59583d07e5a4cfe54ca2e2db6a6097b4f09dc6ce40291fa5a97ecbb3
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:a732db5cdf907d37ceaf1a2b9b746b8a457938288af53f265dbc25fe88ae7442
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:4760018938bf0f42306f6b38e88914e5bba0cd04722bea589978f6f7066d77af
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:be2925413106e99b203defa00ce97a7895c05ae57794263a0e0dff51e572601b
  name: gitops-rhel8-operator-be2925413106e99b203defa00ce97a7895c05ae57794263a0e0dff51e572601b-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:be2925413106e99b203defa00ce97a7895c05ae57794263a0e0dff51e572601b
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:5edd49474a231251230ac9abe49cd3978ed7fd2d45496d3d548d0064dbe3d93d
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:adb6b22f72194c196d34d43adc4ebfa3023fddfac7e87a0078503f88a330d07d
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e391887f298db38faeb11b5d12c58611aa381ff14d4eff88b605d64f6c3590ed
name: openshift-gitops-operator.v1.5.2
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.5.2'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.4\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:c473e1a9dffa98df2325d2053a302f9281c52c39b244cad581d6b454da430234
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:2e5605a97cbd94c43b754b44b231b055b0d2651b46828a40b857bc2336f1fb8b
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:04bf08acb07a21ff4e7b5dcac556a1d563400f07c9cd8183916425ce23802ac1
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e391887f298db38faeb11b5d12c58611aa381ff14d4eff88b605d64f6c3590ed
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95
  name: gitops-rhel8-operator-bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8594156a4654a3dc7df7f2f2290cf63d5bd3298867ca8887b203e41cb6dadbc8
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:6d88505dfd19579c81f36cfb6a2b9f37324589e95b3bb6981368f811d3be1562
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2e0f97c28dcfadc2c754a2297939c29742ad0e61ecda56f315c5d85d6283ac51
name: openshift-gitops-operator.v1.5.3
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.3
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:cdd37324c6ec2fdd451daf119fda385d1cca3427043539e1b8a8422bac9b619e
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:ba46db5be3a47c766e50b21aa78763c094d7d787bff4ba6e5e8e95e754eff6ea
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:208efe235a177700c3cfa88ec6b231cc4b97ac6006be7e9d9eac9f79604cc3f0
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2e0f97c28dcfadc2c754a2297939c29742ad0e61ecda56f315c5d85d6283ac51
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0
  name: gitops-rhel8-operator-1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c3727b91e729b79b465cb99ed05730faf5b9dcc562d4c62549dfb1e0d03531f0
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:3c90880b4d8c85834d4c90e9ee972c47d3b5efd5a013ae0741a24d9502aa6f5e
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5222e68ce95bbdf8b1b7a4cf8f7f1793d7a7ad0a5393a01a56fb66085cdbb1e3
name: openshift-gitops-operator.v1.5.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:df5b34cb458b27a0f9da6d0eddb6d8039f59c87cdabc24109df89d5c3d61ce0d
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:6b89c342ccec84f4bf2351ae97a12763bedc2408821bc49b6edd80f7a4f856c0
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:20cb34d1ba5b7cfb868546e55844cddcca19c7756426529d9102d7852f8d127b
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5222e68ce95bbdf8b1b7a4cf8f7f1793d7a7ad0a5393a01a56fb66085cdbb1e3
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732
  name: gitops-rhel8-operator-4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:9a0add35076f15c8aa8928bb23f2c093413807618ae3d6fb5f00e8c72901ef75
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c013012156129820109af6a12ab99f406c962fdad452d0f9e56e3ceed7c9c3ab
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:644473454b7c406aa0294e6a047fae3eb49b0a924cbdb471eb3e6ff5e8b585bf
name: openshift-gitops-operator.v1.5.5
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.5
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a4c217cd0947d3959beef6b7ff43d5cbf0360d6dd2ce2c9c6aadbdb28afed2c5
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.7\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:2ab75ec3abf77736c6484a19e61ad2b41da8078bdd2a0ce469e30b6849253fcf
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:e30c5eff392ddf75d17182e3deec97661de808b762715ed611e1d5d861e690bf
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:0da3e73cc9a949f3b48ffe4dd2c2ac484592275fdd72e1ee1bf2ef3a4611f0a9
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:644473454b7c406aa0294e6a047fae3eb49b0a924cbdb471eb3e6ff5e8b585bf
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a4c217cd0947d3959beef6b7ff43d5cbf0360d6dd2ce2c9c6aadbdb28afed2c5
  name: gitops-rhel8-operator-a4c217cd0947d3959beef6b7ff43d5cbf0360d6dd2ce2c9c6aadbdb28afed2c5-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:a4c217cd0947d3959beef6b7ff43d5cbf0360d6dd2ce2c9c6aadbdb28afed2c5
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:69cf87e6eb0b69e339a5a076f693b2fc43d624b8bcc937f47112c79e10b8d2e8
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:b83eff8ba8c9667ee37128dc46883d0d1cfcae7068d580aaf449d01aef310186
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:a60bcf736d7f4aa23343369558da6eec8606efadc554f4e6395ca8b0cc173d75
name: openshift-gitops-operator.v1.5.6-0.1664915551.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.6+0.1664915551.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0ffc5c112f09b042032f3a6b7ec2c5cb718a649ca20325a935b77da5b5b0345a
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.5.6
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.7\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:e843bf040a0e278485b7a5302b31c06da4f92ac0787726a884c19ac07f07fa2d
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:fda249dc1b7acdd0faa7005a1514d1af9a7609269482b6d1e01b4623d454f04f
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4ca00fc87c692439fa0869a852f6fcda41b8b8cc998d7f66066e26e752016970
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:a60bcf736d7f4aa23343369558da6eec8606efadc554f4e6395ca8b0cc173d75
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0ffc5c112f09b042032f3a6b7ec2c5cb718a649ca20325a935b77da5b5b0345a
  name: gitops-rhel8-operator-0ffc5c112f09b042032f3a6b7ec2c5cb718a649ca20325a935b77da5b5b0345a-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:0ffc5c112f09b042032f3a6b7ec2c5cb718a649ca20325a935b77da5b5b0345a
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:0ba9c70a12580bf73e133bb4ea48831918d8b8654ce82b6e47fafb4af686fa26
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:f23641d13110bfd148e97ef989c76ec09b591ffe45a78a69bb88a1d564b0c39b
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:74874b4501cf5e478bffce2bed1cbebacbc16c38c9d3af4ca5ad926d970ac715
name: openshift-gitops-operator.v1.5.7
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.7
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7766536531885a4df99c7ffd74bc8831b643659b40796816aef642505210b04c
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:e4c0e1735e7e861a3f27e234e49aa69a289f1a066d54a0600e5939855a187e9d
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:ded6203d4022836241238abca27a30df75f48995d5b2358283d5ac168dc34691
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:81eea124245e644e71b14ce76d4643c76941642716018e2ba7401303a481e798
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:74874b4501cf5e478bffce2bed1cbebacbc16c38c9d3af4ca5ad926d970ac715
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7766536531885a4df99c7ffd74bc8831b643659b40796816aef642505210b04c
  name: gitops-rhel8-operator-7766536531885a4df99c7ffd74bc8831b643659b40796816aef642505210b04c-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7766536531885a4df99c7ffd74bc8831b643659b40796816aef642505210b04c
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:b9a9c5f97d4eae6b94b84feccc8937954571caf54c54cba732b8bb11c343a5a2
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:418ca23b1eedd4b9231a8e554ee5d48e746c750b99d88bf2d32416ef00b945c7
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2227ed26b4c5ba732cba59870740e62e7e8f2e9c14e4d01c9c9c2d4290bb7b60
name: openshift-gitops-operator.v1.5.8
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.8
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:931a0ad7c530bb354dd495546fce4ba20e67dfb2576f5223e72c6135473285b8
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:f59f5d2a242fa8eec9f9cdc68f040dbb279661ef21a4f98ed5f6c2c5db691d4f
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:849449c818b484ea5b8dc41cc28d8d06d08909a4f3bf8a6207c636c7bc48808f
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:bc9939ed082bd39e054ecb81b16194014ba8bebaeed34f5b20516e74d31e3f19
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2227ed26b4c5ba732cba59870740e62e7e8f2e9c14e4d01c9c9c2d4290bb7b60
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:931a0ad7c530bb354dd495546fce4ba20e67dfb2576f5223e72c6135473285b8
  name: gitops-rhel8-operator-931a0ad7c530bb354dd495546fce4ba20e67dfb2576f5223e72c6135473285b8-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:931a0ad7c530bb354dd495546fce4ba20e67dfb2576f5223e72c6135473285b8
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:87b957ad3b0e717e8fde26ddf213ca2ea3ab88e97781bb3c7c1c57a26539146e
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:dc63749cc39a00b69c477f9a3ed9b2884019fa14a752a3ae2e0fc87556f68fe9
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:60ee169761c3fa98312f1022d870a226900dc37b19a6270198df66579b9bdf12
name: openshift-gitops-operator.v1.5.9
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.5.9
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "dex": {
                "openShiftOAuth": true,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4b82750dfa278cd18aaf132fd36563d657ed606952b1d4fb8072a5849b2b0a09
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.3.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:d926479e0863a321a2128bb33e354bfcb18fbf659ab4a8e29a754407e1e33e55
  name: argocd_applicationset_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:a89f68beb922b474b03d6d97eaa9e8bafc9747baabf84916657b8b856098d619
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:75e75ecec3ad73557540c28ba543897d1c506eec19886490030b9d073ddacbd4
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:60ee169761c3fa98312f1022d870a226900dc37b19a6270198df66579b9bdf12
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4b82750dfa278cd18aaf132fd36563d657ed606952b1d4fb8072a5849b2b0a09
  name: gitops-rhel8-operator-4b82750dfa278cd18aaf132fd36563d657ed606952b1d4fb8072a5849b2b0a09-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4b82750dfa278cd18aaf132fd36563d657ed606952b1d4fb8072a5849b2b0a09
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:7f32dcc6407de38869716cd3302b0d99894ec1e3c5eb22848f68d25e14f9ec56
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:096d91637b6f5a91d8a225ea1e28b5a01bc698bc77ecd1c24128a15ffa709b4c
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:a782f27b301fd2c06e94125cca735590a21d87cbe18cf15f06197679462bb65d
name: openshift-gitops-operator.v1.6.0
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.6.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: '>=1.0.0 <1.6.0'
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.4.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:b4bf65d972f03d40d669de7f4086d2fd47a733db5e20aa7fcf79f6ecf4ff26c7
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:36fcc642b33a5cf82e331003fb8a0329107b9accd285a5b0b1facfc899b6c1ae
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:a782f27b301fd2c06e94125cca735590a21d87cbe18cf15f06197679462bb65d
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f
  name: gitops-rhel8-operator-1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:4435ab18a7415e522fbd47bd193286f22e8a7513b97c3496e3d850e427cc7a3e
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:09c95d88d9a5ec0c92536053524d25b8c724e7b5c7e4ea5d267d886b47824484
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:38281804822990c3ab29a07757c8428442179e5f42edcf18cbfee62320376473
name: openshift-gitops-operator.v1.6.1-0.1666124167.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.6.1+0.1666124167.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.6.1
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.4.11\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:a74aebc3c3aa4ba3e231891e14611a9894a73548c54649f01ca8a0698f6122c7
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4ad46447f08b858bb28a7db9e6abb62131292a24efde9967065383ec4aa4a91a
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:38281804822990c3ab29a07757c8428442179e5f42edcf18cbfee62320376473
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6
  name: gitops-rhel8-operator-d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3e50f5b40cf9bb32671da1b2cccc0bc2ada4b046225ae42945bb99fbee817b28
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:8d714387b09cb316387f5f224870009d061f9afa23ccf3bb2d2e3fc6708df8f6
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9bc3430295a14e24e44af317b1d2583be88ad71d90d67ef57795b7827f81c15f
name: openshift-gitops-operator.v1.6.7
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.6.7
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d29c66068130dbf10f69634c6dd031b9445af8029fca13ce9ba47b682cde558f
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.4.28\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:bdf7cbcd4eeba3102b2ffe5d448aa2d4a65cfb2a325204eadd89d9a72161910d
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ee4b1e7a03e5fa9a003a7f85bf23f43461e3166f32aa8a0c3f0a0ab02ba5f8b1
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9bc3430295a14e24e44af317b1d2583be88ad71d90d67ef57795b7827f81c15f
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d29c66068130dbf10f69634c6dd031b9445af8029fca13ce9ba47b682cde558f
  name: gitops-rhel8-operator-d29c66068130dbf10f69634c6dd031b9445af8029fca13ce9ba47b682cde558f-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d29c66068130dbf10f69634c6dd031b9445af8029fca13ce9ba47b682cde558f
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:5dd4d4d65e995f5cb703c246f684605ff6cec58f9f87e03ebe803c6dd7e91c38
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:20b3b12f034d57e3a8f3ebbf2a37b4534151607f1fefa562e8dfa785ee0a8808
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c2f39be75173b4cc57498c5845b14c464bf9af92b49716df9661c8135ac2cf7a
name: openshift-gitops-operator.v1.7.4-0.1690486082.p
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.7.4+0.1690486082.p
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe
      createdAt: "2021-09-15T22:31:21Z"
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.substitutesFor: openshift-gitops-operator.v1.7.4
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD v2.5.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficient
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.
      \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name:
      argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift
      GitOps is a layered product on top of OpenShift that enables teams to adopt
      GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      OpenShift GitOps is built around Argo CD as the core upstream project and assists
      customers to establish an end-to-end application delivery workflow on GitOps
      principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc.
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f1371d2012796e9aaca105112190ff89ec3d0be95968e05b19db101480f67975
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:45789c49d9334e0ed062641313714c101bd0117dc5633316b1ec63e7a6c76c15
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:5c11be8ec9db54331893f2f298aa27006e77b0eaded2d88d0531c77da91a421f
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c2f39be75173b4cc57498c5845b14c464bf9af92b49716df9661c8135ac2cf7a
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe
  name: gitops-rhel8-operator-e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c55aadf45397083bec4e42d6c0514ed79169a07fd3d9d75671904df2c0520e52
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:26050fb95978e90e8d00e895032045e77cb236008a0e1417459e1aeca8a48c69
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_image
- image: registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3
  name: argocd_redis_ha_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b2d58f4dc20eb7e17e09af0e8c5de55fa04f9f4f697e10c6be81a7a6a08381b2
name: openshift-gitops-operator.v1.8.6
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.8.6
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: ""
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.6.153\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f77594bc053be144b33ff9603ee9675c7e82946ec0dbfb04d8f942c8d73155da
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:8aa68fddef88921aeeede24a849d3dabbceff01dc03185342c21e6ee58033eaf
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:8cc59901689858e06f5c2942f8c975449c17454fa8364da6153d9b5a3538a985
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b2d58f4dc20eb7e17e09af0e8c5de55fa04f9f4f697e10c6be81a7a6a08381b2
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f
  name: gitops-rhel8-operator-f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:16d9184345e6d5a19f326a7b52f76d8a59b96763f233c50546ff017a625e5ff5
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:0d13c03048b4435d9f5045a6fb7bd4b8808461b26aeca60c0047fa5937e1d45d
  name: kam_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
---
image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:27efa0ab1d9c69047a924bc1dcd2b56108f5f390a6da56afb6ab7a37cb4578e2
name: openshift-gitops-operator.v1.9.4
package: openshift-gitops-operator
properties:
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisRun
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: AppProject
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Application
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ApplicationSet
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ArgoCD
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: ClusterAnalysisTemplate
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Experiment
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: Rollout
    version: v1alpha1
- type: olm.gvk
  value:
    group: argoproj.io
    kind: RolloutManager
    version: v1alpha1
- type: olm.gvk
  value:
    group: pipelines.openshift.io
    kind: GitopsService
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-gitops-operator
    version: 1.9.4
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "AppProject",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "Application",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ApplicationSet",
            "metadata": {
              "name": "example"
            },
            "spec": null
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "ArgoCD",
            "metadata": {
              "name": "argocd"
            },
            "spec": {
              "controller": {
                "resources": {
                  "limits": {
                    "cpu": "2000m",
                    "memory": "2048Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1024Mi"
                  }
                }
              },
              "ha": {
                "enabled": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "rbac": {
                "defaultPolicy": "",
                "policy": "g, system:cluster-admins, role:admin\n",
                "scopes": "[groups]"
              },
              "redis": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "repo": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "1024Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "256Mi"
                  }
                }
              },
              "resourceExclusions": "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n  - TaskRun\n  - PipelineRun        \n",
              "server": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "125m",
                    "memory": "128Mi"
                  }
                },
                "route": {
                  "enabled": true
                }
              },
              "sso": {
                "dex": {
                  "openShiftOAuth": true,
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "256Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "memory": "128Mi"
                    }
                  }
                },
                "provider": "dex"
              }
            }
          },
          {
            "apiVersion": "argoproj.io/v1alpha1",
            "kind": "RolloutManager",
            "metadata": {
              "name": "argo-rollout"
            },
            "spec": null
          },
          {
            "apiVersion": "pipelines.openshift.io/v1alpha1",
            "kind": "GitopsService",
            "metadata": {
              "name": "gitopsservice-sample"
            },
            "spec": null
          }
        ]
      capabilities: Deep Insights
      console.openshift.io/plugins: '["gitops-plugin"]'
      containerImage: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4
      description: Enables teams to adopt GitOps principles for managing cluster configurations
        and application delivery across hybrid multi-cluster Kubernetes environments.
      olm.skipRange: ""
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Container Platform",
        "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
      operators.operatorframework.io/internal-objects: '["gitopsservices.pipelines.openshift.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      repository: https://github.com/redhat-developer/gitops-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - kind: AnalysisRun
        name: analysisruns.argoproj.io
        version: v1alpha1
      - kind: AnalysisTemplate
        name: analysistemplates.argoproj.io
        version: v1alpha1
      - description: An Application is a group of Kubernetes resources as defined
          by a manifest.
        displayName: Application
        kind: Application
        name: applications.argoproj.io
        version: v1alpha1
      - description: ApplicationSet is the representation of an ApplicationSet controller
          deployment.
        kind: ApplicationSet
        name: applicationsets.argoproj.io
        version: v1alpha1
      - description: An AppProject is a logical grouping of Argo CD Applications.
        displayName: AppProject
        kind: AppProject
        name: appprojects.argoproj.io
        version: v1alpha1
      - description: Argo CD is the representation of an Argo CD deployment.
        displayName: Argo CD
        kind: ArgoCD
        name: argocds.argoproj.io
        resources:
        - kind: ArgoCD
          name: ""
          version: v1alpha1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: CronJob
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: Ingress
          name: ""
          version: v1
        - kind: Job
          name: ""
          version: v1
        - kind: PersistentVolumeClaim
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Prometheus
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Route
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        - kind: ServiceMonitor
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        version: v1alpha1
      - kind: ClusterAnalysisTemplate
        name: clusteranalysistemplates.argoproj.io
        version: v1alpha1
      - kind: Experiment
        name: experiments.argoproj.io
        version: v1alpha1
      - description: GitopsService is the Schema for the gitopsservices API
        displayName: Gitops Service
        kind: GitopsService
        name: gitopsservices.pipelines.openshift.io
        version: v1alpha1
      - kind: RolloutManager
        name: rolloutmanagers.argoproj.io
        version: v1alpha1
      - kind: Rollout
        name: rollouts.argoproj.io
        version: v1alpha1
    description: "Red Hat OpenShift GitOps is a declarative continuous delivery platform
      based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to
      adopt GitOps principles for managing cluster configurations and automating secure
      and repeatable application delivery across hybrid multi-cluster Kubernetes environments.
      Following GitOps and infrastructure as code principles, you can store the configuration
      of clusters and applications in Git repositories and use Git workflows to roll
      them out to the target clusters.\n\n## Features\n* Automated install and upgrades
      of Argo CD\n* Manual and automated configuration sync from Git repositories
      to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize
      templating tools\n* Configuration drift detection and visualization on live
      clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging
      integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and
      Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n##
      Components\n* Argo CD 2.7.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n##
      How to Install \nAfter installing the OpenShift GitOps operator, an instance
      \ of Argo CD is installed in the `openshift-gitops` namespace which has sufficent
      privileges for managing cluster configurations. You can create additional Argo
      CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion:
      argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n
      \   route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product
      on top of OpenShift that enables teams to adopt GitOps principles for managing
      cluster configurations and automating secure and repeatable application delivery
      across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built
      around Argo CD as the core upstream project and assists customers to establish
      an end-to-end application delivery workflow on GitOps principles.\n"
    displayName: Red Hat OpenShift GitOps
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - devtools
    - gitops
    - pipelines
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Release Notes
      url: https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html
    - name: Day 1 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day1
    - name: Day 2 Operations
      url: https://github.com/redhat-developer/kam/tree/master/docs/journey/day2
    maintainers:
    - email: team-gitops@redhat.com
      name: OpenShift GitOps Team
    maturity: GA
    provider:
      name: Red Hat Inc
relatedImages:
- image: registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:3d17786e2f4063154b9e3a40b96bf8ec0a14b86395cea5fe7ca18c5b43764478
  name: argo_rollouts_image
- image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:3873d1f18b5643e1de2601419410270342650a21428bb26a4cbee20c0c63f98b
  name: argocd_image
- image: registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:86012145d4b8798dc12f6f4f07a9316a193188aaac865e324b63f4e60e8ec584
  name: gitops_console_plugin_image
- image: registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:136d3a936759e112d3ea2e78f7c02bd882b0fd3011f4c452f45c32c43822772d
  name: argocd_dex_image
- image: registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:27efa0ab1d9c69047a924bc1dcd2b56108f5f390a6da56afb6ab7a37cb4578e2
  name: ""
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4
  name: manager
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4
  name: gitops-rhel8-operator-11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4-annotation
- image: registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:43bb961d847477902e66a92edd1539322cac8d5f74706b048a458ad037a0c7a3
  name: backend_image
- image: registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:80f92842fe4cba008a873ad2ab6059a3a24e76e16671d8ece034dbbe666996bc
  name: kam_image
- image: registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:a568c8c647e2e2d6abdf12138eeef8f8bdde1fdcbf786e9ca8c8f93bc79acaf9
  name: must_gather_image
- image: registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2
  name: argocd_redis_ha_proxy_image
- image: registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac
  name: argocd_keycloak_image
- image: registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda
  name: argocd_redis_image
schema: olm.bundle
